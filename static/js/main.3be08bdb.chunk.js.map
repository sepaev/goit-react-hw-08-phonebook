{"version":3,"sources":["components/Form/Form.module.css","components/Section/Section.module.css","components/App/App.module.css","components/AppBar/AppBar.module.css","components/AppBar/AuthNav.jsx","redux/selectors.js","components/AppBar/Navigation.jsx","components/AppBar/UserMenu.jsx","components/AppBar/AppBar.jsx","views/LoginView.js","components/Section/Section.jsx","redux/actions/newContacts_actions.js","redux/functions/doClearName.js","redux/functions/checkNameExists.js","redux/functions/doClearNumber.js","redux/functions/checkNumberExists.js","redux/functions/clearDoubleIDs.js","redux/functions/parseFilterQuery.js","redux/operations/newContactOperations.js","services/phonebookAPI.js","redux/contacts/contacts-operations.js","views/ContactsView.js","views/RegisterView.js","views/NotFoundView.js","views/HomeView.js","images/background.jpg","components/App/App.js","components/MainPage/MainPage.styled.jsx","components/MainPage/MainPage.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","redux/filter/filter-actions.js","components/Contacts/Contacts.styled.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-operations.js","redux/filter/filter-selectors.js","components/Contacts/Contacts.jsx","redux/inputs/inputs-actions.js","components/Form/inputs/InputName.jsx","components/Form/inputs/InputNumber.jsx","components/Form/inputs/InputMail.jsx","components/Form/inputs/InputPassword.jsx","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/inputs/inputs-selectors.js","components/Form/Form.jsx","reportWebVitals.js","redux/reducer.js","redux/inputs/inputs-slice.js","redux/store.js","index.js"],"names":["module","exports","AuthNav","location","useLocation","className","css","_nav","to","pathname","state","pathback","_link","activeClassName","_activeLink","getAuthSelector","auth","getContactsSelector","contacts","getNewContactSelector","newContact","getEntitiesSelector","entities","Navigation","isLoggedIn","useSelector","exact","UserMenu","_userMail","AppBar","appBar","LoginView","title","component","Notify","init","position","Section","nameRef","numberRef","sectionClassName","main_section","contacts_section","form_section","section_title","form","submitButtonText","addNewContactAction","createAction","e","preventDefault","target","children","payload","newName","value","trim","newNumber","clearNewContact","doClearName","name","split","join","toLowerCase","checkNameExists","inputName","result","clearName","forEach","doClearNumber","number","checkNumberExists","inputNumber","clearNumber","clearDoubleIDs","idList","filtredList","contact","indexOf","id","push","parseFilterQuery","filterQuery","filterQueryText","filterQueryNumber","match","console","log","toString","queries","query","checkNewContactInState","check","message","checkNewContact","failure","fetchContacts","a","axios","get","then","data","catch","error","Error","postContact","post","response","info","deleteContact","delete","_","success","signup","newUser","alert","status","login","email","password","defaults","baseURL","getContacts","createAsyncThunk","addContact","removeContact","App","dispatch","useDispatch","useEffect","NotFoundView","HomeView","_app","style","backgroundImage","background","path","ContactsView","RegisterView","TextH2","styled","h2","MainPage","user","TextError","Notification","type","makeSearch","ContactsList","ul","SearchInput","input","ContactsItem","li","NumberSpan","span","DeleteButton","button","getErrorSelector","doFiltration","filter","getFilterSelector","makeFiltration","createSelector","length","filtredArray","includes","namesArray","concat","getFiltredContactsSelector","Contacts","filterdContacts","stateError","placeholder","onInput","map","onClick","inputChange","InputName","useState","setName","form_label","form_input","onChange","onBlur","pattern","maxLength","required","InputNumber","setNumber","mask","InputMail","mail","setMail","InputPassword","label","setPassword","getStateAuth","authSelectors","getIsLoggedIn","getUserName","register","logIn","authOperations","authSlice","createSlice","initialState","token","extraReducers","fulfilled","action","rejected","getInputsSelector","inputs","Form","onSubmit","password_default","password_new","password_repete","form_submit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","newContactReducer","meta","arg","isLoading","pending","inputsSlice","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","persistReducer","authReducer","inputsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3be08bdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"Form_form_input__Pjpzp\",\"form\":\"Form_form__2Yx5z\",\"form_submit\":\"Form_form_submit__3xwwY\",\"form_label\":\"Form_form_label__25gG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"Section_form_section__3xxdJ\",\"contacts_section\":\"Section_contacts_section__37zqk\",\"main_section\":\"Section_main_section__PAvij\",\"section_title\":\"Section_section_title__1G4EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_app\":\"App__app__2yeRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"AppBar_appBar__iq24W\",\"_link\":\"AppBar__link__wOHD-\",\"_activeLink\":\"AppBar__activeLink__2Ae7I\",\"_userMail\":\"AppBar__userMail__c3FgJ\"};","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\n\r\nfunction AuthNav() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink\r\n        to={{ pathname: '/register', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/login', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Войти\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","export const getAllStateSelector = state => state;\r\n\r\nexport const getAuthSelector = state => state.auth;\r\nexport const getFilterSelector = state => state.filter;\r\nexport const getContactsSelector = state => state.contacts;\r\nexport const getNewContactSelector = state => state.newContact;\r\n\r\nexport const getErrorSelector = state => getContactsSelector(state).error;\r\nexport const getEntitiesSelector = state => getContactsSelector(state).entities;\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n  const { isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink exact to={'/'} className={css._link} activeClassName={css._activeLink}>\r\n        Главная\r\n      </NavLink>\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to={{ pathname: '/contacts', state: { pathback: location } }}\r\n          className={css._link}\r\n          activeClassName={css._activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\n\r\nfunction UserMenu() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink\r\n        to={{ pathname: '/userinfo', state: { pathback: location } }}\r\n        className={css._userMail}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        добро пожаловать *NAME*\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/logout', state: { pathback: null } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Выйти\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\nimport { Navigation, AuthNav, UserMenu } from './';\r\nimport css from './AppBar.module.css';\r\n\r\nconst AppBar = () => {\r\n  //   const { user, token, isLoggedIn } = useSelector(getAuthSelector);\r\n  const { isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <header className={css.appBar}>\r\n      <Navigation />\r\n      {!isLoggedIn && <AuthNav />}\r\n      {isLoggedIn && <UserMenu />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { Section } from '../components';\r\n\r\nconst LoginView = () => {\r\n  return <Section title='Страница входа' component='Login' />;\r\n};\r\n\r\nexport default LoginView;\r\n","import PropTypes from 'prop-types';\nimport { Form, Contacts, MainPage } from '../';\nimport { Notify } from 'notiflix';\nimport css from './Section.module.css';\n\nNotify.init({ position: 'center-top' });\n\nfunction Section({ title, component }) {\n  let sectionClassName;\n  switch (component) {\n    case 'Main':\n      sectionClassName = css.main_section;\n      break;\n    case 'Contacts':\n      sectionClassName = css.contacts_section;\n      break;\n    default:\n      sectionClassName = css.form_section;\n  }\n  return (\n    <section className={sectionClassName}>\n      <h1 className={css.section_title}>{title}</h1>\n      {component === 'Main' && <MainPage />}\n      {component === 'Contacts' && <Contacts />}\n      {component === 'AddNumber' && <Form form='addNumber' submitButtonText='Добавить контакт' />}\n      {component === 'Login' && <Form form='login' submitButtonText='Войти' />}\n      {component === 'Register' && <Form form='register' submitButtonText='Зарегистрироваться' />}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\r\nlet nameRef;\r\nlet numberRef;\r\n\r\nexport const addNewContactAction = createAction('newContact/create', e => {\r\n  e.preventDefault();\r\n  nameRef = e.target.children[0].children[1];\r\n  numberRef = e.target.children[1].children[1];\r\n\r\n  return {\r\n    payload: { newName: nameRef.value.trim(), newNumber: numberRef.value },\r\n  };\r\n});\r\n\r\nexport const clearNewContact = createAction('newContact/clear', () => {\r\n  if (nameRef) nameRef.value = '';\r\n  if (numberRef) numberRef.value = '';\r\n  return {\r\n    payload: { newName: '', newNumber: '' },\r\n  };\r\n});\r\n","function doClearName(name) {\r\n  if (!name) return name;\r\n  return name.split(' ').join('').toLowerCase().trim();\r\n}\r\nexport default doClearName;\r\n","import doClearName from './doClearName';\r\n\r\nfunction checkNameExists(inputName, contacts) {\r\n  let result = false;\r\n  const clearName = doClearName(inputName);\r\n  if (clearName === '') result = true;\r\n  contacts.forEach(({ name }) => {\r\n    if (clearName === doClearName(name)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNameExists;\r\n","function doClearNumber(number) {\r\n  if (!number) return number;\r\n  const noSpace = number.split(' ').join('');\r\n  const noBracket = noSpace.split('(').join('').split(')').join('');\r\n  const noSign = noBracket.split('-').join('').split('+').join('');\r\n  return noSign;\r\n}\r\nexport default doClearNumber;\r\n","import doClearNumber from './doClearNumber';\r\n\r\nfunction checkNumberExists(inputNumber, contacts) {\r\n  const clearNumber = doClearNumber(inputNumber);\r\n  let result = false;\r\n  if (inputNumber === '') result = true;\r\n  contacts.forEach(({ number }) => {\r\n    if (clearNumber === doClearNumber(number)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNumberExists;\r\n","function clearDoubleIDs(contacts) {\r\n  const idList = [];\r\n  const filtredList = [];\r\n  contacts.forEach(contact => {\r\n    if (idList.indexOf(contact.id) < 0) {\r\n      idList.push(contact.id);\r\n      filtredList.push(contact);\r\n    }\r\n  });\r\n  return filtredList;\r\n}\r\nexport default clearDoubleIDs;\r\n","function parseFilterQuery(filterQuery) {\r\n  let filterQueryText = '';\r\n  let filterQueryNumber = '';\r\n  if (filterQuery) {\r\n    if (filterQuery.match(/\\d+/)) {\r\n      console.log('filterQuery -- ', filterQuery);\r\n      filterQueryNumber = filterQuery.match(/\\d+/).toString();\r\n      const queries = filterQuery.split(filterQueryNumber);\r\n      const query = queries[0] || queries[1];\r\n      filterQueryText = query ? query : '';\r\n    } else {\r\n      filterQueryText = filterQuery;\r\n    }\r\n  }\r\n  return { filterQueryText, filterQueryNumber };\r\n}\r\nexport default parseFilterQuery;\r\n","import { Notify } from 'notiflix';\r\nimport { checkNumberExists, checkNameExists } from '../functions';\r\n///////////////////////\r\nconst checkNewContactInState = (newContact, contacts) => {\r\n  const check = checkNewContact(newContact, contacts);\r\n  if (!check.result) {\r\n    if (check.message) Notify.failure(check.message);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n////////////////////////\r\nfunction checkNewContact({ newName, newNumber }, contacts) {\r\n  let message = '';\r\n  if (!newName || !newNumber || !contacts) return { result: false, message };\r\n  if (checkNumberExists(newNumber, contacts)) {\r\n    message = `Can't do this operation. Number ${newNumber} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  if (checkNameExists(newName, contacts)) {\r\n    message = `Can't do this operation. Name ${newName} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  message = 'Well Done! Added ' + newName;\r\n  return { result: true, message };\r\n}\r\n\r\nexport default checkNewContactInState;\r\n","import axios from 'axios';\r\nimport { Notify } from 'notiflix';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n// axios.defaults.baseURL = 'http://localhost:4321';\r\n// add fake json\r\n// axios.defaults.baseURL = 'https://my-json-server.typicode.com/sepaev/goit-react-hw-08-phonebook/';\r\n\r\nexport async function fetchContacts() {\r\n  return await axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(error => {\r\n      if (error.message === 'Network Error') {\r\n        Notify.failure(`Sorry. Server is not working. Please check the connection`);\r\n      } else {\r\n        Notify.failure(`${error.name}. ${error.message}`);\r\n      }\r\n      throw new Error(error.message);\r\n    });\r\n}\r\n\r\nexport async function postContact({ newName, newNumber }) {\r\n  const { data } = await axios\r\n    .post('/contacts', { name: newName, number: newNumber })\r\n    .then(response => {\r\n      Notify.info(`Contact ${newName} was added successfully`);\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was added.`);\r\n      return null;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id, name) {\r\n  axios\r\n    .delete('/contacts/' + id)\r\n    .then(_ => {\r\n      Notify.success(`Contact ${name} was removed successfully`);\r\n      return true;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was deleted.`);\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function signup(newUser) {\r\n  return await axios\r\n    .post('/users/signup', newUser)\r\n    .then(response => {\r\n      console.log('res -', response);\r\n      alert();\r\n      if (response.status === 400) {\r\n      }\r\n      Notify.success(`Contact ${newUser.name} was registred successfully`);\r\n      console.log('data - ', response.data);\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      console.log('error.response.data - ', error.response.data);\r\n      Notify.failure(`${error.name}. ${error.message}`);\r\n      throw new Error(error);\r\n    });\r\n}\r\n\r\nexport async function login(email, password) {\r\n  try {\r\n    const { data } = await axios.post('/users/login', { email, password });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","import { fetchContacts, postContact, deleteContact } from '../../services/phonebookAPI';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = createAsyncThunk('contacts/fetchContacts', async () => await fetchContacts());\r\nexport const addContact = createAsyncThunk('contacts/createContact', async newContact => await postContact(newContact));\r\nexport const removeContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async ({ id, name }) => await deleteContact(id, name),\r\n);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport Section from '../components/Section';\r\nimport { Notify } from 'notiflix';\r\nimport { clearNewContact } from '../redux/actions/newContacts_actions';\r\nimport checkNewContactInState from '../redux/operations/newContactOperations';\r\nimport { useEffect } from 'react';\r\nimport { getContacts, addContact } from '../redux/contacts/contacts-operations';\r\nimport { getNewContactSelector, getEntitiesSelector } from '../redux/selectors';\r\n\r\nNotify.init({ position: 'center-top' });\r\n\r\nfunction App() {\r\n  const newContact = useSelector(getNewContactSelector);\r\n  const contacts = useSelector(getEntitiesSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (newContact.newName && checkNewContactInState(newContact, contacts)) {\r\n      dispatch(addContact(newContact));\r\n      dispatch(clearNewContact());\r\n    }\r\n  }, [contacts, dispatch, newContact]);\r\n\r\n  return (\r\n    <>\r\n      <Section title='Телефонная книга' component='AddNumber' />\r\n      <hr />\r\n      <Section title='Контакты' component='Contacts' />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Section } from '../components';\r\n\r\nconst LoginView = () => {\r\n  return <Section title='Страница регистрации' component='Register' />;\r\n};\r\n\r\nexport default LoginView;\r\n","import { Section } from '../components';\r\n\r\nfunction NotFoundView() {\r\n  return <Section title='&#128721; 404 ет такой страницы ☹' component='NoPage' />;\r\n}\r\n\r\nexport default NotFoundView;\r\n","import Section from '../components/Section';\r\n\r\nconst HomeView = () => {\r\n  return <Section title='Добро пожаловать в приложение ТЕЛЕФОННАЯ КНИГА' component='Main' />;\r\n};\r\n\r\nexport default HomeView;\r\n","export default __webpack_public_path__ + \"static/media/background.25f6f965.jpg\";","import { Route, Switch } from 'react-router-dom';\nimport { HomeView, LoginView, RegisterView, ContactsView, NotFoundView } from '../../views';\nimport { AppBar } from '../AppBar';\nimport { useSelector } from 'react-redux';\nimport { getAuthSelector } from '../../redux/selectors';\nimport background from '../../images/background.jpg';\nimport css from './App.module.css';\nfunction App() {\n  const { isLoggedIn } = useSelector(getAuthSelector);\n  return (\n    <div\n      className={css._app}\n      style={{\n        backgroundImage: `url(\"${background}\")`,\n      }}\n    >\n      <div className='Container'>\n        <AppBar />\n        <Switch>\n          <Route path='/' exact>\n            <HomeView />\n          </Route>\n          {isLoggedIn && (\n            <Route path='/contacts' exact>\n              <ContactsView />\n            </Route>\n          )}\n          {!isLoggedIn && (\n            <Route path='/login'>\n              <LoginView />\n            </Route>\n          )}\n          {!isLoggedIn && (\n            <Route path='/register'>\n              <RegisterView />\n            </Route>\n          )}\n          <Route path='/'>\n            <NotFoundView />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import { TextH2 } from './MainPage.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\nimport { Notification } from '../';\r\n\r\nfunction MainPage({ message }) {\r\n  const { user, isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n      {!isLoggedIn && <Notification message='Для использования нужно для начала зайти в приложение.' />}\r\n      {!isLoggedIn && <Notification message='Если вы еще не зарегистрированы, пожалуйста зарегистрируйтесь.' />}\r\n      {isLoggedIn && (\r\n        <Notification\r\n          message={`Hellow ${user.name}! You are logged in. Please visit Contacts page, to see your contacts.`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\nexport const TextError = styled.h2`\r\n  color: red;\r\n  text-transform: uppercase;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2, TextError } from './Notification.styled';\r\n\r\nfunction Notification({ message, type = '' }) {\r\n  return (\r\n    <div>\r\n      {!type && <TextH2>{message}</TextH2>}\r\n      {type === 'error' && <TextError>{message}</TextError>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const makeSearch = createAction('filter/changeFilter', value => ({ payload: value.trim().toLowerCase() }));\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  height: 26px;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","export const getContactsSelector = state => state.contacts;\r\nexport const getErrorSelector = state => getContactsSelector(state).error;\r\nexport const getEntitiesSelector = state => getContactsSelector(state).entities;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { getFilterSelector } from './filter-selectors';\r\nimport { getEntitiesSelector } from '../contacts/contacts-selectors';\r\nimport { doClearNumber, parseFilterQuery, clearDoubleIDs } from '../functions';\r\n\r\nconst doFiltration = state => {\r\n  const contacts = getEntitiesSelector(state);\r\n  const filter = getFilterSelector(state);\r\n\r\n  const makeFiltration = createSelector(\r\n    [() => getEntitiesSelector(state), () => getFilterSelector(state)],\r\n    (contacts, filter) => {\r\n      const { filterQueryText, filterQueryNumber } = parseFilterQuery(filter.toString());\r\n      if (filterQueryText.length > 0 || filterQueryNumber.length > 0) {\r\n        let filtredArray = [];\r\n        //поиск по номеру\r\n        if (filterQueryNumber.length > 0) {\r\n          filtredArray = contacts.filter(({ number }) => {\r\n            const clearNumberText = doClearNumber(number);\r\n            return clearNumberText.includes(filterQueryNumber);\r\n          });\r\n          //комбинированый поиск\r\n          if (filterQueryText.length > 0) {\r\n            const namesArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n            return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\r\n          }\r\n          return filtredArray;\r\n        } else {\r\n          //Поиск по имени\r\n          filtredArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n          return filtredArray;\r\n        }\r\n      }\r\n      return contacts;\r\n    },\r\n  );\r\n  const filtredArray = makeFiltration(contacts, filter);\r\n  return clearDoubleIDs(filtredArray);\r\n};\r\nexport default doFiltration;\r\n","import { getEntitiesSelector } from '../contacts/contacts-selectors';\r\nimport doFiltration from './filter-operations';\r\n\r\nexport const getFilterSelector = state => state.filter;\r\n\r\nexport const getFiltredContactsSelector = state => {\r\n  const filter = getFilterSelector(state);\r\n  const contacts = getEntitiesSelector(state);\r\n\r\n  if (!contacts || !contacts.length) return [];\r\n  return filter ? doFiltration(state) : contacts;\r\n};\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeSearch } from '../../redux/filter/filter-actions';\r\nimport { removeContact } from '../../redux/contacts/contacts-operations';\r\nimport { ContactsItem, ContactsList, DeleteButton, NumberSpan, SearchInput } from './Contacts.styled';\r\nimport { getFiltredContactsSelector } from '../../redux/filter/filter-selectors';\r\nimport { getContactsSelector, getErrorSelector } from '../../redux/contacts/contacts-selectors';\r\n\r\nfunction Contacts() {\r\n  const { entities } = useSelector(getContactsSelector);\r\n  const filterdContacts = useSelector(getFiltredContactsSelector);\r\n  const stateError = useSelector(getErrorSelector);\r\n\r\n  const message = entities.length\r\n    ? 'No contacts found.'\r\n    : stateError\r\n    ? stateError.message + '. Contacts could not be loaded to be displayed on the screen.'\r\n    : 'You have no contacts yet.';\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={e => dispatch(makeSearch(e.target.value))}\r\n        />\r\n        {filterdContacts.length > 0 &&\r\n          filterdContacts.map(({ id, name, number }) => (\r\n            <ContactsItem key={id}>\r\n              {'☎ ' + name + ': '}\r\n              <NumberSpan>\r\n                {number}\r\n                <DeleteButton id={id} onClick={() => dispatch(removeContact({ id, name }))}>\r\n                  X\r\n                </DeleteButton>\r\n              </NumberSpan>\r\n            </ContactsItem>\r\n          ))}\r\n      </ContactsList>\r\n      {!filterdContacts.length && <Notification message={message} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const inputChange = createAction('input/change', (inputName, value) => {\r\n  return { payload: { inputName, value } };\r\n});\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\nimport { useState } from 'react';\r\nimport { inputChange } from '../../../redux/inputs/inputs-actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InputName = () => {\r\n  const [name, setName] = useState('');\r\n  const dispatch = useDispatch();\r\n  const handleBlur = () => {\r\n    dispatch(inputChange('name', name));\r\n  };\r\n  const handleChange = ({ target: { value } }) => {\r\n    setName(value);\r\n  };\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Имя</span>\r\n      <InputMask\r\n        key='nameKey'\r\n        className={css.form_input}\r\n        type='text'\r\n        name='name'\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        placeholder='Арнольд Шварценеггер'\r\n        maxLength='25'\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputName;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\nimport { useState } from 'react';\r\nimport { inputChange } from '../../../redux/inputs/inputs-actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InputNumber = () => {\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const handleChange = ({ target: { value } }) => {\r\n    setNumber(value);\r\n  };\r\n  const handleBlur = () => {\r\n    dispatch(inputChange('number', number));\r\n  };\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Номер</span>\r\n      <InputMask\r\n        key='numberKey'\r\n        className={css.form_input}\r\n        type='tel'\r\n        name='number'\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={number}\r\n        pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n        placeholder='+38 (099) 999-99-99'\r\n        mask='+38 (099) 999-99-99'\r\n        title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputNumber;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { inputChange } from '../../../redux/inputs/inputs-actions';\r\n\r\nconst InputMail = () => {\r\n  const [mail, setMail] = useState('');\r\n  const dispatch = useDispatch();\r\n  const handleChange = ({ target: { value } }) => {\r\n    setMail(value);\r\n  };\r\n  const handleBlur = () => {\r\n    dispatch(inputChange('mail', mail));\r\n  };\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Почта</span>\r\n      <InputMask\r\n        key='emailKey'\r\n        className={css.form_input}\r\n        type='email'\r\n        name='email'\r\n        value={mail}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        placeholder='email@example.com'\r\n        title='Введите e-mail'\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputMail;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\nimport { useState } from 'react';\r\nimport { inputChange } from '../../../redux/inputs/inputs-actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InputPassword = ({ status = 'default' }) => {\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  let label;\r\n\r\n  switch (status) {\r\n    case 'new':\r\n      label = 'Придумайте пароль';\r\n      break;\r\n    case 'repete':\r\n      label = 'Повторите пароль';\r\n      break;\r\n    default:\r\n      label = 'Введите пароль';\r\n      break;\r\n  }\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    dispatch(inputChange('password_' + status, password));\r\n  };\r\n\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>{label}</span>\r\n      <InputMask\r\n        key={'password_' + status + '_key'}\r\n        className={css.form_input}\r\n        type='text'\r\n        name='password'\r\n        value={password}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputPassword;\r\n","const getStateAuth = state => state.auth;\r\n\r\nconst getErrorSelector = state => getStateAuth(state).error;\r\nconst getIsLoggedIn = state => getStateAuth(state).isLoggedIn;\r\nconst getUserName = state => getStateAuth(state).user.name;\r\n\r\nconst authSelectors = {\r\n  getStateAuth,\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getErrorSelector,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { signup, login } from '../../services/phonebookAPI';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const register = createAsyncThunk('auth/registeration', async newUser => await signup(newUser));\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async (email, password) => await login(email, password));\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n};\r\n\r\nexport default authOperations;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.auth.user = action.payload.user;\r\n      state.auth.token = action.payload.token;\r\n      state.auth.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.rejected](state, action) {\r\n      state.contacts.error = action.payload;\r\n    },\r\n    [authOperations.register.fulfilled]: (state, { payload }) => {\r\n      state.user = payload.user;\r\n      state.token = payload.token || null;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.register.rejected]: (state, action) => {\r\n      state.error = action.error.message;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","export const getInputsSelector = state => state.inputs;\r\n","import css from './Form.module.css';\nimport { InputMail, InputName, InputNumber, InputPassword } from './inputs';\nimport { authOperations } from '../../redux/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContactAction } from '../../redux/actions/newContacts_actions.js';\nimport { getInputsSelector } from '../../redux/inputs/inputs-selectors';\nimport { authSelectors } from '../../redux/auth';\nimport Notification from '../Notification';\nimport { Notify } from 'notiflix';\n\nfunction Form({ form, submitButtonText }) {\n  const dispatch = useDispatch();\n  const inputs = useSelector(getInputsSelector);\n  let error = useSelector(authSelectors.getErrorSelector);\n  const handleSubmit = e => {\n    e.preventDefault();\n    switch (form) {\n      case 'addNumber':\n        return dispatch(addNewContactAction(e));\n      case 'login':\n        dispatch(authOperations.logIn(inputs.mail, inputs.password_default));\n        break;\n      case 'register':\n        if (inputs.password_new !== inputs.password_repete) {\n          Notify.failure(`Пароли не рованы`);\n          break;\n        }\n        if (inputs.password_new.length < 7) {\n          Notify.failure(`Короткий пароль. Минимум 7 символов`);\n          break;\n        }\n\n        dispatch(authOperations.register({ name: inputs.name, email: inputs.mail, password: inputs.password_new }));\n        break;\n      default:\n        break;\n    }\n    // console.dir(e.target.id);\n    // console.dir(e.target[e.target.length - 1]);\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.form} id={form}>\n      {form === 'addNumber' && <InputName />}\n      {form === 'addNumber' && <InputNumber />}\n      {form === 'login' && <InputMail />}\n      {form === 'login' && <InputPassword />}\n      {form === 'register' && <InputName />}\n      {form === 'register' && <InputMail />}\n      {form === 'register' && <InputPassword status='new' />}\n      {form === 'register' && <InputPassword status='repete' />}\n      <button type='submit' className={css.form_submit} id={form}>\n        {submitButtonText}\n      </button>\n      {error && <Notification message={error} type='error' />}\n    </form>\n  );\n}\nexport default Form;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { makeSearch } from './filter/filter-actions';\r\nimport { addNewContactAction, clearNewContact } from './actions/newContacts_actions';\r\nimport { getContacts, addContact, removeContact } from './contacts/contacts-operations';\r\n\r\nexport const filterReducer = createReducer('', { [makeSearch.type]: (_, { payload }) => payload });\r\n\r\nexport const newContactReducer = createReducer(\r\n  { newName: '', newNumber: '' },\r\n  {\r\n    [addNewContactAction]: (_, { payload }) => payload,\r\n    [clearNewContact]: (_, { payload }) => payload,\r\n  },\r\n);\r\n\r\nexport const entities = createReducer([], {\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [removeContact.fulfilled]: (state, action) => {\r\n    const contact = action.meta.arg;\r\n    return state.filter(({ id }) => id !== contact.id);\r\n  },\r\n  [getContacts.fulfilled]: (state, { payload }) => (state.length === payload.length ? state : payload),\r\n});\r\n\r\nexport const isLoading = createReducer(false, {\r\n  [getContacts.pending]: () => true,\r\n  [getContacts.fulfilled]: () => false,\r\n  [getContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [removeContact.pending]: () => true,\r\n  [removeContact.fulfilled]: () => false,\r\n  [removeContact.rejected]: () => false,\r\n});\r\n\r\nexport const error = createReducer(null, {\r\n  //get\r\n  [getContacts.rejected]: (_, { error }) => error,\r\n  [getContacts.pending]: () => null,\r\n  //post\r\n  [addContact.rejected]: (_, { error }) => error,\r\n  [addContact.pending]: () => null,\r\n  //delete\r\n  [removeContact.rejected]: (_, { error }) => error,\r\n  [removeContact.pending]: () => null,\r\n});\r\n\r\nexport const authReducer = createReducer(null, null);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { inputChange } from './inputs-actions';\r\n\r\nconst initialState = {\r\n  mail: '',\r\n  name: '',\r\n  number: '',\r\n  password_new: '',\r\n  password_repete: '',\r\n  password_default: '',\r\n};\r\n\r\nconst inputsSlice = createSlice({\r\n  name: 'inputs',\r\n  initialState,\r\n  extraReducers: {\r\n    [inputChange](state, { payload: { inputName, value } }) {\r\n      state[inputName] = value;\r\n    },\r\n  },\r\n});\r\n\r\nexport default inputsSlice.reducer;\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { filterReducer, newContactReducer, isLoading, entities, error } from './reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport inputsReducer from './inputs/inputs-slice';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['user', 'token', 'isLoggedIn'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: combineReducers({ isLoading, entities, error }),\r\n  filter: filterReducer,\r\n  newContact: newContactReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  inputs: inputsReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  // reducer: persistedReducer,\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n// const persistedReducer = ;\r\n// const defaultExportObject = { store, persistor };\r\n// export default defaultExportObject;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}