{"version":3,"sources":["components/Section/Section.module.css","components/App/App.module.css","components/AppBar/AppBar.module.css","components/AppBar/AuthNav.jsx","redux/functions/doClearName.js","redux/functions/checkNameExists.js","redux/functions/doClearNumber.js","redux/functions/checkNumberExists.js","redux/functions/clearDoubleIDs.js","redux/functions/parseFilterQuery.js","redux/operations/filterOperations.js","redux/selectors.js","components/AppBar/Navigation.jsx","components/AppBar/UserMenu.jsx","components/AppBar/AppBar.jsx","views/LoginView.js","components/Section/Section.jsx","redux/actions/newContacts_actions.js","redux/operations/newContactOperations.js","services/contactsAPI.js","redux/operations/contactsOperations.js","views/ContactsView.js","views/RegisterView.js","views/NotFoundView.js","views/HomeView.js","images/background.jpg","components/App/App.js","components/MainPage/MainPage.styled.jsx","components/MainPage/MainPage.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","redux/actions/filter_actions.js","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Form/inputs/InputName.jsx","components/Form/inputs/InputNumber.jsx","components/Form/inputs/InputMail.jsx","components/Form/inputs/InputPassword.jsx","components/Form/Form.jsx","reportWebVitals.js","redux/reducer.js","redux/auth/auth-slice.js","redux/auth/auth-operations.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","AuthNav","location","useLocation","className","css","_nav","to","pathname","state","pathback","_link","activeClassName","_activeLink","doClearName","name","split","join","toLowerCase","trim","checkNameExists","inputName","contacts","result","clearName","forEach","doClearNumber","number","checkNumberExists","inputNumber","clearNumber","clearDoubleIDs","idList","filtredList","contact","indexOf","id","push","parseFilterQuery","filterQuery","filterQueryText","filterQueryNumber","match","console","log","toString","queries","query","doFiltration","getEntitiesSelector","filter","getFilterSelector","makeFiltration","createSelector","length","filtredArray","includes","namesArray","concat","getAuthSelector","auth","getContactsSelector","getNewContactSelector","newContact","getErrorSelector","error","entities","getFiltredContactsSelector","Navigation","isLoggedIn","useSelector","exact","UserMenu","_userMail","AppBar","appBar","LoginView","title","component","Notify","init","position","Section","nameRef","numberRef","sectionClassName","main_section","contacts_section","form_section","section_title","type","submitButtonText","addNewContactToState","createAction","e","preventDefault","target","children","payload","newName","value","newNumber","clearNewContact","checkNewContactInState","check","message","checkNewContact","failure","fetchContacts","a","axios","get","then","data","catch","Error","postContact","post","response","info","deleteContact","delete","_","success","defaults","baseURL","getContacts","createAsyncThunk","addContact","removeContact","App","dispatch","useDispatch","useEffect","NotFoundView","HomeView","_app","style","backgroundImage","background","path","ContactsView","RegisterView","TextH2","styled","h2","MainPage","user","Notification","makeSearch","ContactsList","ul","SearchInput","input","ContactsItem","li","NumberSpan","span","DeleteButton","button","Contacts","filterdContacts","stateError","placeholder","onInput","map","onClick","InputName","form_label","form_input","pattern","maxLength","required","InputNumber","mask","InputMail","InputPassword","label","status","Form","onSubmit","form","form_submit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","newContactReducer","fulfilled","action","meta","arg","isLoading","pending","rejected","authSlice","registrationData","loginData","createSlice","initialState","email","token","extraReducers","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","persistReducer","authReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,iBAAmB,kCAAkC,aAAe,8BAA8B,cAAgB,iC,mBCAjLD,EAAOC,QAAU,CAAC,KAAO,oB,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,4BAA4B,UAAY,4B,kHCwBvHC,MAtBf,WACE,IAAMC,EAAWC,cACjB,OACE,sBAAKC,UAAWC,IAAIC,KAApB,UACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,YAAaC,MAAO,CAAEC,SAAUR,IAChDE,UAAWC,IAAIM,MACfC,gBAAiBP,IAAIQ,YAHvB,gFAOA,cAAC,IAAD,CACEN,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEC,SAAUR,IAC7CE,UAAWC,IAAIM,MACfC,gBAAiBP,IAAIQ,YAHvB,gD,eCVSC,MAJf,SAAqBC,GACnB,OAAKA,EACEA,EAAKC,MAAM,KAAKC,KAAK,IAAIC,cAAcC,OAD5BJ,GCULK,MATf,SAAyBC,EAAWC,GAClC,IAAIC,GAAS,EACPC,EAAYV,EAAYO,GAK9B,MAJkB,KAAdG,IAAkBD,GAAS,GAC/BD,EAASG,SAAQ,YAAe,IAAZV,EAAW,EAAXA,KACdS,IAAcV,EAAYC,KAAOQ,GAAS,MAEzCA,GCFMG,MAPf,SAAuBC,GACrB,OAAKA,EACWA,EAAOX,MAAM,KAAKC,KAAK,IACbD,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IACrCD,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IAHzCU,GCUPC,MATf,SAA2BC,EAAaP,GACtC,IAAMQ,EAAcJ,EAAcG,GAC9BN,GAAS,EAKb,MAJoB,KAAhBM,IAAoBN,GAAS,GACjCD,EAASG,SAAQ,YAAiB,IAAdE,EAAa,EAAbA,OACdG,IAAgBJ,EAAcC,KAASJ,GAAS,MAE/CA,GCEMQ,MAXf,SAAwBT,GACtB,IAAMU,EAAS,GACTC,EAAc,GAOpB,OANAX,EAASG,SAAQ,SAAAS,GACXF,EAAOG,QAAQD,EAAQE,IAAM,IAC/BJ,EAAOK,KAAKH,EAAQE,IACpBH,EAAYI,KAAKH,OAGdD,GCOMK,MAhBf,SAA0BC,GACxB,IAAIC,EAAkB,GAClBC,EAAoB,GACxB,GAAIF,EACF,GAAIA,EAAYG,MAAM,OAAQ,CAC5BC,QAAQC,IAAI,kBAAmBL,GAC/BE,EAAoBF,EAAYG,MAAM,OAAOG,WAC7C,IAAMC,EAAUP,EAAYvB,MAAMyB,GAC5BM,EAAQD,EAAQ,IAAMA,EAAQ,GACpCN,EAAkBO,GAAgB,QAElCP,EAAkBD,EAGtB,MAAO,CAAEC,kBAAiBC,sBCyBbO,EAnCM,SAAAvC,GACnB,IAAMa,EAAW2B,EAAoBxC,GAC/ByC,EAASC,EAAkB1C,GAE3B2C,EAAiBC,YACrB,CAAC,kBAAMJ,EAAoBxC,IAAQ,kBAAM0C,EAAkB1C,MAC3D,SAACa,EAAU4B,GACTP,QAAQC,IAAItB,GACZ,MAA+CgB,EAAiBY,EAAOL,YAA/DL,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,kBACzB,GAAID,EAAgBc,OAAS,GAAKb,EAAkBa,OAAS,EAAG,CAC9D,IAAIC,EAAe,GAEnB,GAAId,EAAkBa,OAAS,EAAG,CAMhC,GALAC,EAAejC,EAAS4B,QAAO,YAAiB,IAAdvB,EAAa,EAAbA,OAEhC,OADwBD,EAAcC,GACf6B,SAASf,MAG9BD,EAAgBc,OAAS,EAAG,CAC9B,IAAMG,EAAanC,EAAS4B,QAAO,qBAAGnC,KAAgBG,cAAcsC,SAAShB,MAC7E,OAAOe,EAAaD,OAAS,EAAIC,EAAaG,OAAOD,GAAcA,EAErE,OAAOF,EAIP,OADAA,EAAejC,EAAS4B,QAAO,qBAAGnC,KAAgBG,cAAcsC,SAAShB,MAI7E,OAAOlB,KAGLiC,EAAeH,EAAe9B,EAAU4B,GAC9C,OAAOnB,EAAewB,IClCXI,EAAkB,SAAAlD,GAAK,OAAIA,EAAMmD,MACjCT,EAAoB,SAAA1C,GAAK,OAAIA,EAAMyC,QACnCW,EAAsB,SAAApD,GAAK,OAAIA,EAAMa,UACrCwC,EAAwB,SAAArD,GAAK,OAAIA,EAAMsD,YAEvCC,EAAmB,SAAAvD,GAAK,OAAIoD,EAAoBpD,GAAOwD,OACvDhB,EAAsB,SAAAxC,GAAK,OAAIoD,EAAoBpD,GAAOyD,UAE1DC,EAA6B,SAAA1D,GACxC,IAAMyC,EAASC,EAAkB1C,GAC3Ba,EAAW2B,EAAoBxC,GAErC,OAAKa,GAAaA,EAASgC,OACpBJ,EAASF,EAAavC,GAASa,EADI,ICW7B8C,MArBf,WACE,IAAMlE,EAAWC,cACTkE,EAAeC,YAAYX,GAA3BU,WACR,OACE,sBAAKjE,UAAWC,IAAIC,KAApB,UACE,cAAC,IAAD,CAASiE,OAAK,EAAChE,GAAI,IAAKH,UAAWC,IAAIM,MAAOC,gBAAiBP,IAAIQ,YAAnE,wDAGCwD,GACC,cAAC,IAAD,CACE9D,GAAI,CAAEC,SAAU,YAAaC,MAAO,CAAEC,SAAUR,IAChDE,UAAWC,IAAIM,MACfC,gBAAiBP,IAAIQ,YAHvB,kECWO2D,MAtBf,WACE,IAAMtE,EAAWC,cACjB,OACE,sBAAKC,UAAWC,IAAIC,KAApB,UACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,YAAaC,MAAO,CAAEC,SAAUR,IAChDE,UAAWC,IAAIoE,UACf7D,gBAAiBP,IAAIQ,YAHvB,gHAOA,cAAC,IAAD,CACEN,GAAI,CAAEC,SAAU,UAAWC,MAAO,CAAEC,SAAU,OAC9CN,UAAWC,IAAIM,MACfC,gBAAiBP,IAAIQ,YAHvB,gDCGS6D,EAZA,WAEb,IAAQL,EAAeC,YAAYX,GAA3BU,WACR,OACE,yBAAQjE,UAAWC,IAAIsE,OAAvB,UACE,cAAC,EAAD,KACEN,GAAc,cAAC,EAAD,IACfA,GAAc,cAAC,EAAD,QCNNO,EAJG,WAChB,OAAO,cAAC,EAAD,CAASC,MAAM,kFAAiBC,UAAU,W,yBCEnDC,SAAOC,KAAK,CAAEC,SAAU,eA0BTC,IC9BXC,EACAC,ED6BWF,EAxBf,YAAwC,IAClCG,EADaR,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UAExB,OAAQA,GACN,IAAK,OACHO,EAAmBhF,IAAIiF,aACvB,MACF,IAAK,WACHD,EAAmBhF,IAAIkF,iBACvB,MACF,QACEF,EAAmBhF,IAAImF,aAE3B,OACE,0BAASpF,UAAWiF,EAApB,UACE,oBAAIjF,UAAWC,IAAIoF,cAAnB,SAAmCZ,IACpB,SAAdC,GAAwB,cAAC,GAAD,IACV,aAAdA,GAA4B,cAAC,GAAD,IACd,cAAdA,GAA6B,cAAC,GAAD,CAAMY,KAAK,YAAYC,iBAAiB,gGACvD,UAAdb,GAAyB,cAAC,GAAD,CAAMY,KAAK,QAAQC,iBAAiB,mCAC/C,aAAdb,GAA4B,cAAC,GAAD,CAAMY,KAAK,WAAWC,iBAAiB,qH,OCtB7DC,EAAuBC,YAAa,qBAAqB,SAAAC,GAKpE,OAJAA,EAAEC,iBACFZ,EAAUW,EAAEE,OAAOC,SAAS,GAAGA,SAAS,GACxCb,EAAYU,EAAEE,OAAOC,SAAS,GAAGA,SAAS,GAEnC,CACLC,QAAS,CAAEC,QAAShB,EAAQiB,MAAMjF,OAAQkF,UAAWjB,EAAUgB,WAItDE,EAAkBT,YAAa,oBAAoB,WAG9D,OAFIV,IAASA,EAAQiB,MAAQ,IACzBhB,IAAWA,EAAUgB,MAAQ,IAC1B,CACLF,QAAS,CAAEC,QAAS,GAAIE,UAAW,QCSxBE,MAxBgB,SAACxC,EAAYzC,GAC1C,IAAMkF,EAQR,WAAiDlF,GAAW,IAAjC6E,EAAgC,EAAhCA,QAASE,EAAuB,EAAvBA,UAC9BI,EAAU,GACd,IAAKN,IAAYE,IAAc/E,EAAU,MAAO,CAAEC,QAAQ,EAAOkF,WACjE,GAAI7E,EAAkByE,EAAW/E,GAE/B,MAAO,CAAEC,QAAQ,EAAOkF,QADxBA,EAAO,0CAAsCJ,EAAtC,qBAGT,GAAIjF,EAAgB+E,EAAS7E,GAE3B,MAAO,CAAEC,QAAQ,EAAOkF,QADxBA,EAAO,wCAAoCN,EAApC,qBAIT,MAAO,CAAE5E,QAAQ,EAAMkF,QADvBA,EAAU,oBAAsBN,GAnBlBO,CAAgB3C,EAAYzC,GAC1C,QAAKkF,EAAMjF,SACLiF,EAAMC,SAAS1B,SAAO4B,QAAQH,EAAMC,UACjC,I,yCCAJ,SAAeG,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACQC,IACVC,IAAI,aACJC,MAAK,qBAAGC,QACRC,OAAM,SAAAjD,GAML,KALsB,kBAAlBA,EAAMwC,QACR1B,SAAO4B,QAAP,6DAEA5B,SAAO4B,QAAP,UAAkB1C,EAAMlD,KAAxB,aAAiCkD,EAAMwC,UAEnC,IAAIU,MAAMlD,EAAMwC,YAVrB,oF,sBAcA,SAAeW,EAAtB,kC,4CAAO,mCAAAP,EAAA,6DAA6BV,EAA7B,EAA6BA,QAASE,EAAtC,EAAsCA,UAAtC,SACkBS,IACpBO,KAAK,YAAa,CAAEtG,KAAMoF,EAASxE,OAAQ0E,IAC3CW,MAAK,SAAAM,GAEJ,OADAvC,SAAOwC,KAAP,kBAAuBpB,EAAvB,4BACOmB,KAERJ,OAAM,SAAAjD,GAEL,OADAc,SAAO4B,QAAP,kBAA0B1C,EAAMwC,QAAhC,wBACO,QATN,uBACGQ,EADH,EACGA,KADH,kBAWEA,GAXF,4C,sBAcA,SAAeO,EAAtB,oC,4CAAO,WAA6BpF,EAAIrB,GAAjC,SAAA8F,EAAA,sDACLC,IACGW,OAAO,aAAerF,GACtB4E,MAAK,SAAAU,GAEJ,OADA3C,SAAO4C,QAAP,kBAA0B5G,EAA1B,+BACO,KAERmG,OAAM,SAAAjD,GAEL,OADAc,SAAO4B,QAAP,kBAA0B1C,EAAMwC,QAAhC,2BACO,KATN,4C,sBAhCPK,IAAMc,SAASC,QAAU,wBCAlB,IAAMC,GAAcC,YAAiB,yBAAD,sBAA2B,sBAAAlB,EAAA,sEAAkBD,IAAlB,oFACzDoB,GAAaD,YAAiB,yBAAD,uCAA2B,WAAMhE,GAAN,SAAA8C,EAAA,sEAA0BO,EAAYrD,GAAtC,mFAA3B,uDAC7BkE,GAAgBF,YAC3B,yBAD2C,uCAE3C,+BAAAlB,EAAA,6DAASzE,EAAT,EAASA,GAAIrB,EAAb,EAAaA,KAAb,SAA8ByG,EAAcpF,EAAIrB,GAAhD,mFAF2C,uDCI7CgE,SAAOC,KAAK,CAAEC,SAAU,eA2BTiD,OAzBf,WACE,IAAMnE,EAAaO,YAAYR,GACzBxC,EAAWgD,YAAYrB,GACvBkF,EAAWC,cAajB,OAXAC,qBAAU,WACRF,EAASL,QACR,CAACK,IAEJE,qBAAU,WACJtE,EAAWoC,SAAWI,EAAuBxC,EAAYzC,KAC3D6G,EAASH,GAAWjE,IACpBoE,EAAS7B,QAEV,CAAChF,EAAU6G,EAAUpE,IAGtB,qCACE,cAAC,EAAD,CAASc,MAAM,8FAAmBC,UAAU,cAC5C,uBACA,cAAC,EAAD,CAASD,MAAM,mDAAWC,UAAU,iBCzB3BF,GAJG,WAChB,OAAO,cAAC,EAAD,CAASC,MAAM,sHAAuBC,UAAU,cCG1CwD,OAJf,WACE,OAAO,cAAC,EAAD,CAASzD,MAAM,uHAAoCC,UAAU,YCGvDyD,GAJE,WACf,OAAO,cAAC,EAAD,CAAS1D,MAAM,8PAAiDC,UAAU,UCHpE,OAA0B,uC,oBC8C1BoD,I,GAAAA,GAvCf,WACE,IAAQ7D,EAAeC,YAAYX,GAA3BU,WACR,OACE,qBACEjE,UAAWC,KAAImI,KACfC,MAAO,CACLC,gBAAgB,QAAD,OAAUC,GAAV,OAHnB,SAME,sBAAKvI,UAAU,YAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwI,KAAK,IAAIrE,OAAK,EAArB,SACE,cAAC,GAAD,MAEDF,GACC,cAAC,IAAD,CAAOuE,KAAK,YAAYrE,OAAK,EAA7B,SACE,cAACsE,GAAD,OAGFxE,GACA,cAAC,IAAD,CAAOuE,KAAK,SAAZ,SACE,cAAC,EAAD,OAGFvE,GACA,cAAC,IAAD,CAAOuE,KAAK,YAAZ,SACE,cAACE,GAAD,MAGJ,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAAC,GAAD,e,kBCpCCG,GAASC,KAAOC,GAAV,oECkBJC,I,GAAAA,GAff,YAAgC,IAAZzC,EAAW,EAAXA,QAClB,EAA6BnC,YAAYX,GAAjCwF,EAAR,EAAQA,KAAM9E,EAAd,EAAcA,WACd,OACE,gCACE,cAAC0E,GAAD,UAAStC,KACPpC,GAAc,cAAC,GAAD,CAAcoC,QAAQ,+CACrCpC,GACC,cAAC,GAAD,CACEoC,QAAO,iBAAY0C,EAAKpI,KAAjB,gFCXJgI,GAASC,KAAOC,GAAV,oECSJG,I,eAAAA,GARf,YAAsC,IAAZ3C,EAAW,EAAXA,QACxB,OACE,8BACE,cAAC,GAAD,UAASA,OCJF4C,GAAaxD,YAAa,uBAAuB,SAAAO,GAAK,MAAK,CAAEF,QAASE,EAAMjF,OAAOD,kBCAnFoI,GAAeN,KAAOO,GAAV,yEAIZC,GAAcR,KAAOS,MAAV,sQAcXC,GAAeV,KAAOW,GAAV,kJAQZC,GAAaZ,KAAOa,KAAV,4FAKVC,GAAed,KAAOe,OAAV,0HCeVC,OAxCf,WACE,IAAQ9F,EAAaI,YAAYT,GAAzBK,SACF+F,EAAkB3F,YAAYH,GAC9B+F,EAAa5F,YAAYN,GAEzByC,EAAUvC,EAASZ,OACrB,qBACA4G,EACAA,EAAWzD,QAAU,gEACrB,4BACE0B,EAAWC,cAEjB,OACE,eAAC,WAAD,WACE,eAACkB,GAAD,WACE,cAACE,GAAD,CACE9D,KAAK,OACL3E,KAAK,SACL8D,MAAM,8HACNsF,YAAY,iBACZC,QAAS,SAAAtE,GAAC,OAAIqC,EAASkB,GAAWvD,EAAEE,OAAOI,WAE5C6D,EAAgB3G,OAAS,GACxB2G,EAAgBI,KAAI,gBAAGjI,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMY,EAAb,EAAaA,OAAb,OAClB,eAAC+H,GAAD,WACG,UAAO3I,EAAO,KACf,eAAC6I,GAAD,WACGjI,EACD,cAACmI,GAAD,CAAc1H,GAAIA,EAAIkI,QAAS,kBAAMnC,EAASF,GAAc,CAAE7F,KAAIrB,WAAlE,oBAJeqB,UAWvB6H,EAAgB3G,QAAU,cAAC,GAAD,CAAcmD,QAASA,Q,uCCrB1C8D,GAnBG,WAChB,OACE,wBAAOnK,UAAWC,KAAImK,WAAtB,UACE,sDACA,cAAC,KAAD,CAEEpK,UAAWC,KAAIoK,WACf/E,KAAK,OACL3E,KAAK,OACL2J,QAAQ,yHACRP,YAAY,wBACZQ,UAAU,KACV9F,MAAM,kcACN+F,UAAQ,GARJ,eCcGC,GAnBK,WAClB,OACE,wBAAOzK,UAAWC,KAAImK,WAAtB,UACE,kEACA,cAAC,KAAD,CAEEpK,UAAWC,KAAIoK,WACf/E,KAAK,MACL3E,KAAK,SACL2J,QAAQ,yFACRP,YAAY,sBACZW,KAAK,sBACLjG,MAAM,giBACN+F,UAAQ,GARJ,iBCaGG,GAlBG,WAChB,OACE,wBAAO3K,UAAWC,KAAImK,WAAtB,UACE,kEACA,cAAC,KAAD,CAEEpK,UAAWC,KAAIoK,WACf/E,KAAK,QACL3E,KAAK,QACLoJ,YAAY,oBACZO,QAAQ,yBACR7F,MAAM,oDACN+F,UAAQ,GAPJ,gBC0BGI,GA/BO,SAAC,GAAgB,IACjCC,EADmBC,EAAa,EAAbA,OAGvB,OAAQA,GACN,IAAK,MACHD,EAAQ,oGACR,MACF,IAAK,SACHA,EAAQ,8FACR,MACF,QACEA,EAAQ,kFAIZ,OACE,wBAAO7K,UAAWC,KAAImK,WAAtB,UACE,+BAAOS,IACP,cAAC,KAAD,CAEE7K,UAAWC,KAAIoK,WACf/E,KAAK,WACL3E,KAAK,WACL2J,QAAQ,cACR7F,MAAM,sLACN+F,UAAQ,GANH,WAAaM,EAAS,WCQpBC,I,YAAAA,GAzBf,YAA2C,IAA3BzF,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,iBACdwC,EAAWC,cACjB,OACE,uBACEgD,SAAU,SAAAtF,GAER,OADAnD,QAAQC,IAAIkD,EAAEE,QACPmC,EAASvC,EAAqBE,KAEvC1F,UAAWC,KAAIgL,KALjB,UAOY,cAAT3F,GAAwB,cAAC,GAAD,IACf,cAATA,GAAwB,cAAC,GAAD,IACf,UAATA,GAAoB,cAAC,GAAD,IACX,UAATA,GAAoB,cAAC,GAAD,IACX,aAATA,GAAuB,cAAC,GAAD,IACd,aAATA,GAAuB,cAAC,GAAD,IACd,aAATA,GAAuB,cAAC,GAAD,CAAewF,OAAO,QACpC,aAATxF,GAAuB,cAAC,GAAD,CAAewF,OAAO,WAE9C,wBAAQxF,KAAK,SAAStF,UAAWC,KAAIiL,YAArC,SACG3F,QCbM4F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8CCFDO,GAAgBC,YAAc,GAAD,gBAAQ3C,GAAW3D,MAAO,SAACgC,EAAD,YAAMxB,YAE7D+F,GAAoBD,YAC/B,CAAE7F,QAAS,GAAIE,UAAW,KADkB,sBAGzCT,GAAuB,SAAC8B,EAAD,YAAMxB,WAHY,gBAIzCI,GAAkB,SAACoB,EAAD,YAAMxB,WAJiB,KAQjChC,GAAW8H,YAAc,IAAD,sBAClChE,GAAWkE,WAAY,SAACzL,EAAD,OAAUyF,EAAV,EAAUA,QAAV,6BAA4BzF,GAA5B,CAAmCyF,OADxB,gBAElC+B,GAAciE,WAAY,SAACzL,EAAO0L,GACjC,IAAMjK,EAAUiK,EAAOC,KAAKC,IAC5B,OAAO5L,EAAMyC,QAAO,qBAAGd,KAAgBF,EAAQE,SAJd,gBAMlC0F,GAAYoE,WAAY,SAACzL,EAAD,OAAUyF,EAAV,EAAUA,QAAV,OAAyBzF,EAAM6C,SAAW4C,EAAQ5C,OAAS7C,EAAQyF,KANzD,KASxBoG,GAAYN,aAAc,GAAD,sBACnClE,GAAYyE,SAAU,kBAAM,KADO,gBAEnCzE,GAAYoE,WAAY,kBAAM,KAFK,gBAGnCpE,GAAY0E,UAAW,kBAAM,KAHM,gBAKnCxE,GAAWuE,SAAU,kBAAM,KALQ,gBAMnCvE,GAAWkE,WAAY,kBAAM,KANM,gBAOnClE,GAAWwE,UAAW,kBAAM,KAPO,gBASnCvE,GAAcsE,SAAU,kBAAM,KATK,gBAUnCtE,GAAciE,WAAY,kBAAM,KAVG,gBAWnCjE,GAAcuE,UAAW,kBAAM,KAXI,KAczBvI,GAAQ+H,YAAc,MAAD,sBAE/BlE,GAAY0E,UAAW,SAAC9E,EAAD,YAAMzD,SAFE,gBAG/B6D,GAAYyE,SAAU,kBAAM,QAHG,gBAK/BvE,GAAWwE,UAAW,SAAC9E,EAAD,YAAMzD,SALG,gBAM/B+D,GAAWuE,SAAU,kBAAM,QANI,gBAQ/BtE,GAAcuE,UAAW,SAAC9E,EAAD,YAAMzD,SARA,gBAS/BgE,GAAcsE,SAAU,kBAAM,QATC,KCvBnBE,IDmCYT,YAAc,KAAM,ME9C9BjE,YAAiB,gBAAD,uCAAkB,WAAM2E,GAAN,iBAAA7F,EAAA,+EAExBC,IAAMO,KAAK,gBAAiBqF,GAFJ,uBAEvCzF,EAFuC,EAEvCA,KAFuC,kBAGxCA,GAHwC,wHAAlB,uDASnBc,YAAiB,aAAD,uCAAe,WAAM4E,GAAN,iBAAA9F,EAAA,+EAElBC,IAAMO,KAAK,eAAgBsF,GAFT,uBAEjC1F,EAFiC,EAEjCA,KAFiC,kBAGlCA,GAHkC,wHAAf,uDDJZ2F,YAAY,CAC5B7L,KAAM,OACN8L,aARmB,CACnB1D,KAAM,CAAEpI,KAAM,KAAM+L,MAAO,MAC3BC,MAAO,KACP1I,YAAY,GAMZ2I,cAAe,KAGjB,S,kBERMC,GAAoB,CACxBC,IAAK,OACLC,Q,QAAAA,EACAC,UAAW,CAAC,UAGRC,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGIC,GAAcC,aAAgB,CAClC3M,SAAU2M,aAAgB,CAAE3B,aAAWpI,YAAUD,WACjDf,OAAQ6I,GACRhI,WAAYkI,GACZrI,KAAMsK,aAAejB,GAAmBkB,MAG7BC,GAAQC,YAAe,CAElCC,QAASN,GACTX,cACAkB,UAAUC,IAGCC,GAAYC,aAAaN,I,SC3BtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaU,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRM,SAASC,eAAe,SAG1BzD,M,kBCrBAxL,EAAOC,QAAU,CAAC,WAAa,yBAAyB,KAAO,mBAAmB,YAAc,0BAA0B,WAAa,4B","file":"static/js/main.7c9e7327.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"Section_form_section__3xxdJ\",\"contacts_section\":\"Section_contacts_section__37zqk\",\"main_section\":\"Section_main_section__PAvij\",\"section_title\":\"Section_section_title__1G4EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_app\":\"App__app__2yeRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"AppBar_appBar__iq24W\",\"_link\":\"AppBar__link__wOHD-\",\"_activeLink\":\"AppBar__activeLink__2Ae7I\",\"_userMail\":\"AppBar__userMail__c3FgJ\"};","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\n\r\nfunction AuthNav() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink\r\n        to={{ pathname: '/register', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/login', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Войти\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","function doClearName(name) {\r\n  if (!name) return name;\r\n  return name.split(' ').join('').toLowerCase().trim();\r\n}\r\nexport default doClearName;\r\n","import doClearName from './doClearName';\r\n\r\nfunction checkNameExists(inputName, contacts) {\r\n  let result = false;\r\n  const clearName = doClearName(inputName);\r\n  if (clearName === '') result = true;\r\n  contacts.forEach(({ name }) => {\r\n    if (clearName === doClearName(name)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNameExists;\r\n","function doClearNumber(number) {\r\n  if (!number) return number;\r\n  const noSpace = number.split(' ').join('');\r\n  const noBracket = noSpace.split('(').join('').split(')').join('');\r\n  const noSign = noBracket.split('-').join('').split('+').join('');\r\n  return noSign;\r\n}\r\nexport default doClearNumber;\r\n","import doClearNumber from './doClearNumber';\r\n\r\nfunction checkNumberExists(inputNumber, contacts) {\r\n  const clearNumber = doClearNumber(inputNumber);\r\n  let result = false;\r\n  if (inputNumber === '') result = true;\r\n  contacts.forEach(({ number }) => {\r\n    if (clearNumber === doClearNumber(number)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNumberExists;\r\n","function clearDoubleIDs(contacts) {\r\n  const idList = [];\r\n  const filtredList = [];\r\n  contacts.forEach(contact => {\r\n    if (idList.indexOf(contact.id) < 0) {\r\n      idList.push(contact.id);\r\n      filtredList.push(contact);\r\n    }\r\n  });\r\n  return filtredList;\r\n}\r\nexport default clearDoubleIDs;\r\n","function parseFilterQuery(filterQuery) {\r\n  let filterQueryText = '';\r\n  let filterQueryNumber = '';\r\n  if (filterQuery) {\r\n    if (filterQuery.match(/\\d+/)) {\r\n      console.log('filterQuery -- ', filterQuery);\r\n      filterQueryNumber = filterQuery.match(/\\d+/).toString();\r\n      const queries = filterQuery.split(filterQueryNumber);\r\n      const query = queries[0] || queries[1];\r\n      filterQueryText = query ? query : '';\r\n    } else {\r\n      filterQueryText = filterQuery;\r\n    }\r\n  }\r\n  return { filterQueryText, filterQueryNumber };\r\n}\r\nexport default parseFilterQuery;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { getEntitiesSelector, getFilterSelector } from '../selectors';\r\nimport { doClearNumber, parseFilterQuery, clearDoubleIDs } from '../functions';\r\n\r\nconst doFiltration = state => {\r\n  const contacts = getEntitiesSelector(state);\r\n  const filter = getFilterSelector(state);\r\n\r\n  const makeFiltration = createSelector(\r\n    [() => getEntitiesSelector(state), () => getFilterSelector(state)],\r\n    (contacts, filter) => {\r\n      console.log(contacts);\r\n      const { filterQueryText, filterQueryNumber } = parseFilterQuery(filter.toString());\r\n      if (filterQueryText.length > 0 || filterQueryNumber.length > 0) {\r\n        let filtredArray = [];\r\n        //поиск по номеру\r\n        if (filterQueryNumber.length > 0) {\r\n          filtredArray = contacts.filter(({ number }) => {\r\n            const clearNumberText = doClearNumber(number);\r\n            return clearNumberText.includes(filterQueryNumber);\r\n          });\r\n          //комбинированый поиск\r\n          if (filterQueryText.length > 0) {\r\n            const namesArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n            return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\r\n          }\r\n          return filtredArray;\r\n        } else {\r\n          //Поиск по имени\r\n          filtredArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n          return filtredArray;\r\n        }\r\n      }\r\n      return contacts;\r\n    },\r\n  );\r\n  const filtredArray = makeFiltration(contacts, filter);\r\n  return clearDoubleIDs(filtredArray);\r\n};\r\nexport default doFiltration;\r\n","import doFiltration from './operations/filterOperations';\r\nexport const getAllStateSelector = state => state;\r\n\r\nexport const getAuthSelector = state => state.auth;\r\nexport const getFilterSelector = state => state.filter;\r\nexport const getContactsSelector = state => state.contacts;\r\nexport const getNewContactSelector = state => state.newContact;\r\n\r\nexport const getErrorSelector = state => getContactsSelector(state).error;\r\nexport const getEntitiesSelector = state => getContactsSelector(state).entities;\r\n\r\nexport const getFiltredContactsSelector = state => {\r\n  const filter = getFilterSelector(state);\r\n  const contacts = getEntitiesSelector(state);\r\n\r\n  if (!contacts || !contacts.length) return [];\r\n  return filter ? doFiltration(state) : contacts;\r\n};\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n  const { isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink exact to={'/'} className={css._link} activeClassName={css._activeLink}>\r\n        Главная\r\n      </NavLink>\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to={{ pathname: '/contacts', state: { pathback: location } }}\r\n          className={css._link}\r\n          activeClassName={css._activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './AppBar.module.css';\r\n\r\nfunction UserMenu() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink\r\n        to={{ pathname: '/userinfo', state: { pathback: location } }}\r\n        className={css._userMail}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        добро пожаловать *NAME*\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/logout', state: { pathback: null } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Выйти\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\nimport { Navigation, AuthNav, UserMenu } from './';\r\nimport css from './AppBar.module.css';\r\n\r\nconst AppBar = () => {\r\n  //   const { user, token, isLoggedIn } = useSelector(getAuthSelector);\r\n  const { isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <header className={css.appBar}>\r\n      <Navigation />\r\n      {!isLoggedIn && <AuthNav />}\r\n      {isLoggedIn && <UserMenu />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { Section } from '../components';\r\n\r\nconst LoginView = () => {\r\n  return <Section title='Страница входа' component='Login' />;\r\n};\r\n\r\nexport default LoginView;\r\n","import PropTypes from 'prop-types';\nimport { Form, Contacts, MainPage } from '../';\nimport { Notify } from 'notiflix';\nimport css from './Section.module.css';\n\nNotify.init({ position: 'center-top' });\n\nfunction Section({ title, component }) {\n  let sectionClassName;\n  switch (component) {\n    case 'Main':\n      sectionClassName = css.main_section;\n      break;\n    case 'Contacts':\n      sectionClassName = css.contacts_section;\n      break;\n    default:\n      sectionClassName = css.form_section;\n  }\n  return (\n    <section className={sectionClassName}>\n      <h1 className={css.section_title}>{title}</h1>\n      {component === 'Main' && <MainPage />}\n      {component === 'Contacts' && <Contacts />}\n      {component === 'AddNumber' && <Form type='addNumber' submitButtonText='Добавить контакт' />}\n      {component === 'Login' && <Form type='login' submitButtonText='Войти' />}\n      {component === 'Register' && <Form type='register' submitButtonText='Зарегистрироваться' />}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\r\nlet nameRef;\r\nlet numberRef;\r\n\r\nexport const addNewContactToState = createAction('newContact/create', e => {\r\n  e.preventDefault();\r\n  nameRef = e.target.children[0].children[1];\r\n  numberRef = e.target.children[1].children[1];\r\n\r\n  return {\r\n    payload: { newName: nameRef.value.trim(), newNumber: numberRef.value },\r\n  };\r\n});\r\n\r\nexport const clearNewContact = createAction('newContact/clear', () => {\r\n  if (nameRef) nameRef.value = '';\r\n  if (numberRef) numberRef.value = '';\r\n  return {\r\n    payload: { newName: '', newNumber: '' },\r\n  };\r\n});\r\n","import { Notify } from 'notiflix';\r\nimport { checkNumberExists, checkNameExists } from '../functions';\r\n///////////////////////\r\nconst checkNewContactInState = (newContact, contacts) => {\r\n  const check = checkNewContact(newContact, contacts);\r\n  if (!check.result) {\r\n    if (check.message) Notify.failure(check.message);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n////////////////////////\r\nfunction checkNewContact({ newName, newNumber }, contacts) {\r\n  let message = '';\r\n  if (!newName || !newNumber || !contacts) return { result: false, message };\r\n  if (checkNumberExists(newNumber, contacts)) {\r\n    message = `Can't do this operation. Number ${newNumber} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  if (checkNameExists(newName, contacts)) {\r\n    message = `Can't do this operation. Name ${newName} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  message = 'Well Done! Added ' + newName;\r\n  return { result: true, message };\r\n}\r\n\r\nexport default checkNewContactInState;\r\n","import axios from 'axios';\r\nimport { Notify } from 'notiflix';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4321';\r\n// add fake json\r\n// axios.defaults.baseURL = 'https://my-json-server.typicode.com/sepaev/goit-react-hw-08-phonebook/';\r\n\r\nexport async function fetchContacts() {\r\n  return await axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(error => {\r\n      if (error.message === 'Network Error') {\r\n        Notify.failure(`Sorry. Server is not working. Please check the connection`);\r\n      } else {\r\n        Notify.failure(`${error.name}. ${error.message}`);\r\n      }\r\n      throw new Error(error.message);\r\n    });\r\n}\r\n\r\nexport async function postContact({ newName, newNumber }) {\r\n  const { data } = await axios\r\n    .post('/contacts', { name: newName, number: newNumber })\r\n    .then(response => {\r\n      Notify.info(`Contact ${newName} was added successfully`);\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was added.`);\r\n      return null;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id, name) {\r\n  axios\r\n    .delete('/contacts/' + id)\r\n    .then(_ => {\r\n      Notify.success(`Contact ${name} was removed successfully`);\r\n      return true;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was deleted.`);\r\n      return false;\r\n    });\r\n}\r\n","import { fetchContacts, postContact, deleteContact } from '../../services/contactsAPI';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = createAsyncThunk('contacts/fetchContacts', async () => await fetchContacts());\r\nexport const addContact = createAsyncThunk('contacts/createContact', async newContact => await postContact(newContact));\r\nexport const removeContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async ({ id, name }) => await deleteContact(id, name),\r\n);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport Section from '../components/Section';\r\nimport { Notify } from 'notiflix';\r\nimport { clearNewContact } from '../redux/actions/newContacts_actions';\r\nimport checkNewContactInState from '../redux/operations/newContactOperations';\r\nimport { useEffect } from 'react';\r\nimport { getContacts, addContact } from '../redux/operations/contactsOperations';\r\nimport { getNewContactSelector, getEntitiesSelector } from '../redux/selectors';\r\n\r\nNotify.init({ position: 'center-top' });\r\n\r\nfunction App() {\r\n  const newContact = useSelector(getNewContactSelector);\r\n  const contacts = useSelector(getEntitiesSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (newContact.newName && checkNewContactInState(newContact, contacts)) {\r\n      dispatch(addContact(newContact));\r\n      dispatch(clearNewContact());\r\n    }\r\n  }, [contacts, dispatch, newContact]);\r\n\r\n  return (\r\n    <>\r\n      <Section title='Телефонная книга' component='AddNumber' />\r\n      <hr />\r\n      <Section title='Контакты' component='Contacts' />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Section } from '../components';\r\n\r\nconst LoginView = () => {\r\n  return <Section title='Страница регистрации' component='Register' />;\r\n};\r\n\r\nexport default LoginView;\r\n","import { Section } from '../components';\r\n\r\nfunction NotFoundView() {\r\n  return <Section title='&#128721; 404 ет такой страницы ☹' component='NoPage' />;\r\n}\r\n\r\nexport default NotFoundView;\r\n","import Section from '../components/Section';\r\n\r\nconst HomeView = () => {\r\n  return <Section title='Добро пожаловать в приложение ТЕЛЕФОННАЯ КНИГА' component='Main' />;\r\n};\r\n\r\nexport default HomeView;\r\n","export default __webpack_public_path__ + \"static/media/background.25f6f965.jpg\";","import { Route, Switch } from 'react-router-dom';\nimport { HomeView, LoginView, RegisterView, ContactsView, NotFoundView } from '../../views';\nimport { AppBar } from '../AppBar';\nimport { useSelector } from 'react-redux';\nimport { getAuthSelector } from '../../redux/selectors';\nimport background from '../../images/background.jpg';\nimport css from './App.module.css';\nfunction App() {\n  const { isLoggedIn } = useSelector(getAuthSelector);\n  return (\n    <div\n      className={css._app}\n      style={{\n        backgroundImage: `url(\"${background}\")`,\n      }}\n    >\n      <div className='Container'>\n        <AppBar />\n        <Switch>\n          <Route path='/' exact>\n            <HomeView />\n          </Route>\n          {isLoggedIn && (\n            <Route path='/contacts' exact>\n              <ContactsView />\n            </Route>\n          )}\n          {!isLoggedIn && (\n            <Route path='/login'>\n              <LoginView />\n            </Route>\n          )}\n          {!isLoggedIn && (\n            <Route path='/register'>\n              <RegisterView />\n            </Route>\n          )}\n          <Route path='/'>\n            <NotFoundView />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import { TextH2 } from './MainPage.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuthSelector } from '../../redux/selectors';\r\nimport { Notification } from '../';\r\n\r\nfunction MainPage({ message }) {\r\n  const { user, isLoggedIn } = useSelector(getAuthSelector);\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n      {!isLoggedIn && <Notification message='To view application, you must login first.' />}\r\n      {isLoggedIn && (\r\n        <Notification\r\n          message={`Hellow ${user.name}! You are logged in. Please visit Contacts page, to see your contacts.`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nfunction  Notification ({ message }) {\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const makeSearch = createAction('filter/changeFilter', value => ({ payload: value.trim().toLowerCase() }));\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  height: 26px;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeSearch } from '../../redux/actions/filter_actions';\r\nimport { removeContact } from '../../redux/operations/contactsOperations';\r\nimport { ContactsItem, ContactsList, DeleteButton, NumberSpan, SearchInput } from './Contacts.styled';\r\nimport { getFiltredContactsSelector, getContactsSelector, getErrorSelector } from '../../redux/selectors';\r\n\r\nfunction Contacts() {\r\n  const { entities } = useSelector(getContactsSelector);\r\n  const filterdContacts = useSelector(getFiltredContactsSelector);\r\n  const stateError = useSelector(getErrorSelector);\r\n\r\n  const message = entities.length\r\n    ? 'No contacts found.'\r\n    : stateError\r\n    ? stateError.message + '. Contacts could not be loaded to be displayed on the screen.'\r\n    : 'You have no contacts yet.';\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={e => dispatch(makeSearch(e.target.value))}\r\n        />\r\n        {filterdContacts.length > 0 &&\r\n          filterdContacts.map(({ id, name, number }) => (\r\n            <ContactsItem key={id}>\r\n              {'☎ ' + name + ': '}\r\n              <NumberSpan>\r\n                {number}\r\n                <DeleteButton id={id} onClick={() => dispatch(removeContact({ id, name }))}>\r\n                  X\r\n                </DeleteButton>\r\n              </NumberSpan>\r\n            </ContactsItem>\r\n          ))}\r\n      </ContactsList>\r\n      {!filterdContacts.length && <Notification message={message} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst InputName = () => {\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Имя</span>\r\n      <InputMask\r\n        key='nameKey'\r\n        className={css.form_input}\r\n        type='text'\r\n        name='name'\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        placeholder='Arnold Schwarzenegger'\r\n        maxLength='25'\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputName;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst InputNumber = () => {\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Номер</span>\r\n      <InputMask\r\n        key='numberKey'\r\n        className={css.form_input}\r\n        type='tel'\r\n        name='number'\r\n        pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n        placeholder='+38 (099) 999-99-99'\r\n        mask='+38 (099) 999-99-99'\r\n        title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputNumber;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst InputMail = () => {\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>Почта</span>\r\n      <InputMask\r\n        key='emailKey'\r\n        className={css.form_input}\r\n        type='email'\r\n        name='email'\r\n        placeholder='email@example.com'\r\n        pattern='*{3,20}@*{3,20}.*{2,7}'\r\n        title='Введите e-mail'\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputMail;\r\n","import css from '../Form.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst InputPassword = ({ status }) => {\r\n  let label;\r\n\r\n  switch (status) {\r\n    case 'new':\r\n      label = 'Придумайте пароль';\r\n      break;\r\n    case 'repete':\r\n      label = 'Повторите пароль';\r\n      break;\r\n    default:\r\n      label = 'Введите пароль';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <label className={css.form_label}>\r\n      <span>{label}</span>\r\n      <InputMask\r\n        key={'password' + status + 'Key'}\r\n        className={css.form_input}\r\n        type='password'\r\n        name='password'\r\n        pattern='(?=.*[0-9])'\r\n        title='Требуется хоть одна цыфра в строке'\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputPassword;\r\n","import css from './Form.module.css';\nimport { InputMail, InputName, InputNumber, InputPassword } from './inputs';\nimport { useDispatch } from 'react-redux';\nimport { addNewContactToState } from '../../redux/actions/newContacts_actions.js';\n\nfunction Form({ type, submitButtonText }) {\n  const dispatch = useDispatch();\n  return (\n    <form\n      onSubmit={e => {\n        console.log(e.target);\n        return dispatch(addNewContactToState(e));\n      }}\n      className={css.form}\n    >\n      {type === 'addNumber' && <InputName />}\n      {type === 'addNumber' && <InputNumber />}\n      {type === 'login' && <InputMail />}\n      {type === 'login' && <InputPassword />}\n      {type === 'register' && <InputName />}\n      {type === 'register' && <InputMail />}\n      {type === 'register' && <InputPassword status='new' />}\n      {type === 'register' && <InputPassword status='repete' />}\n\n      <button type='submit' className={css.form_submit}>\n        {submitButtonText}\n      </button>\n    </form>\n  );\n}\nexport default Form;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { makeSearch } from './actions/filter_actions';\r\nimport { addNewContactToState, clearNewContact } from './actions/newContacts_actions';\r\nimport { getContacts, addContact, removeContact } from './operations/contactsOperations';\r\n\r\nexport const filterReducer = createReducer('', { [makeSearch.type]: (_, { payload }) => payload });\r\n\r\nexport const newContactReducer = createReducer(\r\n  { newName: '', newNumber: '' },\r\n  {\r\n    [addNewContactToState]: (_, { payload }) => payload,\r\n    [clearNewContact]: (_, { payload }) => payload,\r\n  },\r\n);\r\n\r\nexport const entities = createReducer([], {\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [removeContact.fulfilled]: (state, action) => {\r\n    const contact = action.meta.arg;\r\n    return state.filter(({ id }) => id !== contact.id);\r\n  },\r\n  [getContacts.fulfilled]: (state, { payload }) => (state.length === payload.length ? state : payload),\r\n});\r\n\r\nexport const isLoading = createReducer(false, {\r\n  [getContacts.pending]: () => true,\r\n  [getContacts.fulfilled]: () => false,\r\n  [getContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [removeContact.pending]: () => true,\r\n  [removeContact.fulfilled]: () => false,\r\n  [removeContact.rejected]: () => false,\r\n});\r\n\r\nexport const error = createReducer(null, {\r\n  //get\r\n  [getContacts.rejected]: (_, { error }) => error,\r\n  [getContacts.pending]: () => null,\r\n  //post\r\n  [addContact.rejected]: (_, { error }) => error,\r\n  [addContact.pending]: () => null,\r\n  //delete\r\n  [removeContact.rejected]: (_, { error }) => error,\r\n  [removeContact.pending]: () => null,\r\n});\r\n\r\nexport const authReducer = createReducer(null, null);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {},\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst register = createAsyncThunk('auth/register', async registrationData => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', registrationData);\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async loginData => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', loginData);\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n});\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n};\r\n\r\nexport default authOperations;\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { filterReducer, newContactReducer, isLoading, entities, error } from './reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: combineReducers({ isLoading, entities, error }),\r\n  filter: filterReducer,\r\n  newContact: newContactReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  // reducer: persistedReducer,\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n// const persistedReducer = ;\r\n// const defaultExportObject = { store, persistor };\r\n// export default defaultExportObject;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"Form_form_input__Pjpzp\",\"form\":\"Form_form__2Yx5z\",\"form_submit\":\"Form_form_submit__3xwwY\",\"form_label\":\"Form_form_label__25gG3\"};"],"sourceRoot":""}