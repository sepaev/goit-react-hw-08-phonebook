{"version":3,"sources":["components/Navigation/Navigation.module.css","components/ContactsForm/ContactsForm.module.css","components/Section/Section.module.css","redux/actions/newContacts_actions.js","views/LoginView.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","redux/actions/filter_actions.js","services/contactsAPI.js","redux/operations/contactsOperations.js","components/Contacts/Contacts.styled.jsx","redux/functions/doClearName.js","redux/functions/checkNameExists.js","redux/functions/doClearNumber.js","redux/functions/checkNumberExists.js","redux/functions/clearDoubleIDs.js","redux/functions/parseFilterQuery.js","redux/operations/filterOperations.js","redux/selectors.js","components/Contacts/Contacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/operations/newContactOperations.js","views/ContactsView.js","views/RegisterView.js","views/NotFoundView.js","components/Navigation/Navigation.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","nameRef","numberRef","LoginView","PhonebookForm","styled","form","FormLabel","label","FormButton","button","addNewContactToState","createAction","e","preventDefault","target","children","payload","newName","value","trim","newNumber","clearNewContact","Form","dispatch","useDispatch","onSubmit","className","css","inputNumber","type","name","pattern","placeholder","maxLength","title","required","mask","TextH2","h2","Notification","message","makeSearch","toLowerCase","fetchContacts","a","axios","get","then","data","catch","error","Notify","failure","Error","postContact","post","number","response","info","deleteContact","id","delete","_","success","defaults","baseURL","getContacts","createAsyncThunk","addContact","newContact","removeContact","ContactsList","ul","SearchInput","input","ContactsItem","li","NumberSpan","span","DeleteButton","doClearName","split","join","checkNameExists","inputName","contacts","result","clearName","forEach","doClearNumber","checkNumberExists","clearNumber","clearDoubleIDs","idList","filtredList","contact","indexOf","push","parseFilterQuery","filterQuery","filterQueryText","filterQueryNumber","match","console","log","toString","queries","query","doFiltration","state","getEntitiesSelector","filter","getFilterSelector","makeFiltration","createSelector","length","filtredArray","includes","namesArray","concat","getContactsSelector","entities","getErrorSelector","getNewContactSelector","getFiltredContactsSelector","Contacts","useSelector","filterdContacts","stateError","onInput","map","onClick","SectionStyle","section","TitleH1","h1","init","position","Section","component","sectionClassName","form_section","contacts_section","checkNewContactInState","check","checkNewContact","App","useEffect","NotFoundView","Navigation","location","useLocation","_nav","exact","to","_link","activeClassName","_activeLink","pathname","pathback","path","ContactsView","RegisterView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","newContactReducer","fulfilled","action","meta","arg","isLoading","pending","rejected","middleware","getDefaultMiddleware","logger","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,YAAc,kC,mBCAlGD,EAAOC,QAAU,CAAC,YAAc,oC,mBCAhCD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,iBAAmB,oC,iDCA9EC,EACAC,E,+CCEWC,EAJG,WAChB,OAAO,8C,sBCCIC,EAAgBC,IAAOC,KAAV,6FAMbC,EAAYF,IAAOG,MAAV,gHAOTC,EAAaJ,IAAOK,OAAV,mE,wBFXVC,EAAuBC,YAAa,qBAAqB,SAAAC,GAKpE,OAJAA,EAAEC,iBACFb,EAAUY,EAAEE,OAAOC,SAAS,GAAGA,SAAS,GACxCd,EAAYW,EAAEE,OAAOC,SAAS,GAAGA,SAAS,GAEnC,CACLC,QAAS,CAAEC,QAASjB,EAAQkB,MAAMC,OAAQC,UAAWnB,EAAUiB,WAItDG,EAAkBV,YAAa,oBAAoB,WAG9D,OAFIX,IAASA,EAAQkB,MAAQ,IACzBjB,IAAWA,EAAUiB,MAAQ,IAC1B,CACLF,QAAS,CAAEC,QAAS,GAAIG,UAAW,Q,iBGwBxBE,I,EAAAA,EApCf,WACE,IAAMC,EAAWC,cACjB,OACE,eAACrB,EAAD,CAAesB,SAAU,SAAAb,GAAC,OAAIW,EAASb,EAAqBE,KAA5D,UACE,eAACN,EAAD,WACE,wCACA,cAAC,IAAD,CAEEoB,UAAWC,IAAIC,YACfC,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,YAAY,wBACZC,UAAU,KACVC,MAAM,kcACNC,UAAQ,GARJ,cAWR,eAAC7B,EAAD,WACE,0CACA,cAAC,IAAD,CAEEoB,UAAWC,IAAIC,YACfC,KAAK,MACLC,KAAK,SACLC,QAAQ,yFACRC,YAAY,sBACZI,KAAK,sBACLF,MAAM,giBACNC,UAAQ,GARJ,gBAWR,cAAC3B,EAAD,CAAYqB,KAAK,SAAjB,6BCpCOQ,EAASjC,IAAOkC,GAAV,iECSJC,MARf,YAAsC,IAAZC,EAAW,EAAXA,QACxB,OACE,8BACE,cAACH,EAAD,UAASG,OCJFC,EAAa9B,YAAa,uBAAuB,SAAAO,GAAK,MAAK,CAAEF,QAASE,EAAMC,OAAOuB,kB,iDCKzF,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACQC,IACVC,IAAI,aACJC,MAAK,qBAAGC,QACRC,OAAM,SAAAC,GAML,KALsB,kBAAlBA,EAAMV,QACRW,SAAOC,QAAP,6DAEAD,SAAOC,QAAP,UAAkBF,EAAMpB,KAAxB,aAAiCoB,EAAMV,UAEnC,IAAIa,MAAMH,EAAMV,YAVrB,oF,sBAcA,SAAec,EAAtB,kC,4CAAO,mCAAAV,EAAA,6DAA6B3B,EAA7B,EAA6BA,QAASG,EAAtC,EAAsCA,UAAtC,SACkByB,IACpBU,KAAK,YAAa,CAAEzB,KAAMb,EAASuC,OAAQpC,IAC3C2B,MAAK,SAAAU,GAEJ,OADAN,SAAOO,KAAP,kBAAuBzC,EAAvB,4BACOwC,KAERR,OAAM,SAAAC,GAEL,OADAC,SAAOC,QAAP,kBAA0BF,EAAMV,QAAhC,wBACO,QATN,uBACGQ,EADH,EACGA,KADH,kBAWEA,GAXF,4C,sBAcA,SAAeW,EAAtB,oC,4CAAO,WAA6BC,EAAI9B,GAAjC,SAAAc,EAAA,sDACLC,IACGgB,OAAO,aAAeD,GACtBb,MAAK,SAAAe,GAEJ,OADAX,SAAOY,QAAP,kBAA0BjC,EAA1B,+BACO,KAERmB,OAAM,SAAAC,GAEL,OADAC,SAAOC,QAAP,kBAA0BF,EAAMV,QAAhC,2BACO,KATN,4C,sBAhCPK,IAAMmB,SAASC,QAAU,wBCAlB,I,UAAMC,EAAcC,YAAiB,yBAAD,sBAA2B,sBAAAvB,EAAA,sEAAkBD,IAAlB,oFACzDyB,EAAaD,YAAiB,yBAAD,uCAA2B,WAAME,GAAN,SAAAzB,EAAA,sEAA0BU,EAAYe,GAAtC,mFAA3B,uDAC7BC,EAAgBH,YAC3B,yBAD2C,uCAE3C,+BAAAvB,EAAA,6DAASgB,EAAT,EAASA,GAAI9B,EAAb,EAAaA,KAAb,SAA8B6B,EAAcC,EAAI9B,GAAhD,mFAF2C,uDCHhCyC,EAAenE,IAAOoE,GAAV,sEAIZC,GAAcrE,IAAOsE,MAAV,mQAcXC,GAAevE,IAAOwE,GAAV,+IAQZC,GAAazE,IAAO0E,KAAV,yFAKVC,GAAe3E,IAAOK,OAAV,uH,SC7BVuE,OAJf,SAAqBlD,GACnB,OAAKA,EACEA,EAAKmD,MAAM,KAAKC,KAAK,IAAIxC,cAAcvB,OAD5BW,GCULqD,OATf,SAAyBC,EAAWC,GAClC,IAAIC,GAAS,EACPC,EAAYP,GAAYI,GAK9B,MAJkB,KAAdG,IAAkBD,GAAS,GAC/BD,EAASG,SAAQ,YAAe,IAAZ1D,EAAW,EAAXA,KACdyD,IAAcP,GAAYlD,KAAOwD,GAAS,MAEzCA,GCFMG,OAPf,SAAuBjC,GACrB,OAAKA,EACWA,EAAOyB,MAAM,KAAKC,KAAK,IACbD,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IACrCD,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IAHzC1B,GCUPkC,OATf,SAA2B9D,EAAayD,GACtC,IAAMM,EAAcF,GAAc7D,GAC9B0D,GAAS,EAKb,MAJoB,KAAhB1D,IAAoB0D,GAAS,GACjCD,EAASG,SAAQ,YAAiB,IAAdhC,EAAa,EAAbA,OACdmC,IAAgBF,GAAcjC,KAAS8B,GAAS,MAE/CA,GCEMM,OAXf,SAAwBP,GACtB,IAAMQ,EAAS,GACTC,EAAc,GAOpB,OANAT,EAASG,SAAQ,SAAAO,GACXF,EAAOG,QAAQD,EAAQnC,IAAM,IAC/BiC,EAAOI,KAAKF,EAAQnC,IACpBkC,EAAYG,KAAKF,OAGdD,GCOMI,OAhBf,SAA0BC,GACxB,IAAIC,EAAkB,GAClBC,EAAoB,GACxB,GAAIF,EACF,GAAIA,EAAYG,MAAM,OAAQ,CAC5BC,QAAQC,IAAI,kBAAmBL,GAC/BE,EAAoBF,EAAYG,MAAM,OAAOG,WAC7C,IAAMC,EAAUP,EAAYlB,MAAMoB,GAC5BM,EAAQD,EAAQ,IAAMA,EAAQ,GACpCN,EAAkBO,GAAgB,QAElCP,EAAkBD,EAGtB,MAAO,CAAEC,kBAAiBC,sBCwBbO,GAlCM,SAAAC,GACnB,IAAMxB,EAAWyB,GAAoBD,GAC/BE,EAASC,GAAkBH,GAE3BI,EAAiBC,aACrB,CAAC,kBAAMJ,GAAoBD,IAAQ,kBAAMG,GAAkBH,MAC3D,SAACxB,EAAU0B,GACTR,QAAQC,IAAInB,GACZ,MAA+Ca,GAAiBa,EAAON,YAA/DL,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,kBACzB,GAAID,EAAgBe,OAAS,GAAKd,EAAkBc,OAAS,EAAG,CAC9D,IAAIC,EAAe,GAEnB,GAAIf,EAAkBc,OAAS,EAAG,CAMhC,GALAC,EAAe/B,EAAS0B,QAAO,YAAiB,IAAdvD,EAAa,EAAbA,OAEhC,OADwBiC,GAAcjC,GACf6D,SAAShB,MAG9BD,EAAgBe,OAAS,EAAG,CAC9B,IAAMG,EAAajC,EAAS0B,QAAO,qBAAGjF,KAAgBY,cAAc2E,SAASjB,MAC7E,OAAOgB,EAAaD,OAAS,EAAIC,EAAaG,OAAOD,GAAcA,EAErE,OAAOF,EAIP,OADAA,EAAe/B,EAAS0B,QAAO,qBAAGjF,KAAgBY,cAAc2E,SAASjB,MAI7E,OAAOf,KAGX,OAAO4B,EAAe5B,EAAU0B,IClCrBS,GAAsB,SAAAX,GAAK,OAAIA,EAAMxB,UACrCyB,GAAsB,SAAAD,GAAK,OAAIW,GAAoBX,GAAOY,UAC1DC,GAAmB,SAAAb,GAAK,OAAIW,GAAoBX,GAAO3D,OACvD8D,GAAoB,SAAAH,GAAK,OAAIA,EAAME,QACnCY,GAAwB,SAAAd,GAAK,OAAIA,EAAMxC,YAGvCuD,GAA6B,SAAAf,GACxC,IAAMxB,EAAWyB,GAAoBD,GAC/BE,EAASC,GAAkBH,GAEjC,IAAKxB,IAAaA,EAAS8B,OAAQ,MAAO,GAC1C,IAAKJ,EAAQ,OAAO1B,EACpB,IAAM+B,EAAeR,GAAaC,GAElC,OADmBjB,GAAewB,ICgCrBS,I,MAAAA,GAxCf,WACE,IAAQJ,EAAaK,YAAYN,IAAzBC,SACFM,EAAkBD,YAAYF,IAC9BI,EAAaF,YAAYJ,IAEzBlF,EAAUiF,EAASN,OACrB,qBACAa,EACAA,EAAWxF,QAAU,gEACrB,4BACEjB,EAAWC,cAEjB,OACE,eAAC,WAAD,WACE,eAAC+C,EAAD,WACE,cAACE,GAAD,CACE5C,KAAK,OACLC,KAAK,SACLI,MAAM,8HACNF,YAAY,iBACZiG,QAAS,SAAArH,GAAC,OAAIW,EAASkB,EAAW7B,EAAEE,OAAOI,WAE5C6G,EAAgBZ,OAAS,GACxBY,EAAgBG,KAAI,gBAAGtE,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAM0B,EAAb,EAAaA,OAAb,OAClB,eAACmB,GAAD,WACG,UAAO7C,EAAO,KACf,eAAC+C,GAAD,WACGrB,EACD,cAACuB,GAAD,CAAcnB,GAAIA,EAAIuE,QAAS,kBAAM5G,EAAS+C,EAAc,CAAEV,KAAI9B,WAAlE,oBAJe8B,UAWvBmE,EAAgBZ,QAAU,cAAC,EAAD,CAAc3E,QAASA,QCzC5C4F,GAAehI,IAAOiI,QAAV,4QAaZC,GAAUlI,IAAOmI,GAAV,4F,oBCRpBpF,SAAOqF,KAAK,CAAEC,SAAU,eAcTC,OAZf,YAAwC,IAArBxG,EAAoB,EAApBA,MAAOyG,EAAa,EAAbA,UAClBC,EAAiC,SAAdD,EAAuBhH,KAAIkH,aAAelH,KAAImH,iBAEvE,OACE,eAACV,GAAD,CAAc1G,UAAWkH,EAAzB,UACE,cAACN,GAAD,UAAUpG,IACK,SAAdyG,GAAwB,cAAC,EAAD,IACV,aAAdA,GAA4B,cAAC,GAAD,QCWpBI,OAxBgB,SAAC1E,EAAYgB,GAC1C,IAAM2D,EAQR,WAAiD3D,GAAW,IAAjCpE,EAAgC,EAAhCA,QAASG,EAAuB,EAAvBA,UAC9BoB,EAAU,GACd,IAAKvB,IAAYG,IAAciE,EAAU,MAAO,CAAEC,QAAQ,EAAO9C,WACjE,GAAIkD,GAAkBtE,EAAWiE,GAE/B,MAAO,CAAEC,QAAQ,EAAO9C,QADxBA,EAAO,0CAAsCpB,EAAtC,qBAGT,GAAI+D,GAAgBlE,EAASoE,GAE3B,MAAO,CAAEC,QAAQ,EAAO9C,QADxBA,EAAO,wCAAoCvB,EAApC,qBAIT,MAAO,CAAEqE,QAAQ,EAAM9C,QADvBA,EAAU,oBAAsBvB,GAnBlBgI,CAAgB5E,EAAYgB,GAC1C,QAAK2D,EAAM1D,SACL0D,EAAMxG,SAASW,SAAOC,QAAQ4F,EAAMxG,UACjC,ICEXW,SAAOqF,KAAK,CAAEC,SAAU,eA2BTS,OAzBf,WACE,IAAM7E,EAAayD,YAAYH,IACzBtC,EAAWyC,YAAYhB,IACvBvF,EAAWC,cAajB,OAXA2H,qBAAU,WACR5H,EAAS2C,OACR,CAAC3C,IAEJ4H,qBAAU,WACJ9E,EAAWpD,SAAW8H,GAAuB1E,EAAYgB,KAC3D9D,EAAS6C,EAAWC,IACpB9C,EAASF,QAEV,CAACgE,EAAU9D,EAAU8C,IAGtB,qCACE,cAAC,GAAD,CAASnC,MAAM,YAAYyG,UAAU,SACrC,uBACA,cAAC,GAAD,CAASzG,MAAM,WAAWyG,UAAU,iBC3B3BzI,GAJG,WAChB,OAAO,iDCGMkJ,OAJf,WACE,OAAO,sD,6BC2BMC,OAzBf,WACE,IAAMC,EAAWC,cACjB,OACE,sBAAK7H,UAAWC,KAAI6H,KAApB,UACE,cAAC,KAAD,CAASC,OAAK,EAACC,GAAI,IAAKhI,UAAWC,KAAIgI,MAAOC,gBAAiBjI,KAAIkI,YAAnE,kBAGA,cAAC,KAAD,CACEH,GAAI,CAAEI,SAAU,YAAajD,MAAO,CAAEkD,SAAUT,IAChD5H,UAAWC,KAAIgI,MACfC,gBAAiBjI,KAAIkI,YAHvB,sBAOA,cAAC,KAAD,CACEH,GAAI,CAAEI,SAAU,SAAUjD,MAAO,CAAEkD,SAAUT,IAC7C5H,UAAWC,KAAIgI,MACfC,gBAAiBjI,KAAIkI,YAHvB,uBCWSX,I,YAAAA,GAxBf,WACE,OACE,sBAAKxH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,GAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsI,KAAK,IAAIP,OAAK,EAArB,SACE,cAACQ,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACE,GAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAAC,GAAD,aCTKG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtH,MAAK,YAAkD,IAA/CuH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8CCFDO,GAAgBC,YAAc,GAAD,gBAAQnI,EAAWZ,MAAO,SAACiC,EAAD,YAAM9C,YAE7D6J,GAAoBD,YAC/B,CAAE3J,QAAS,GAAIG,UAAW,KADkB,sBAGzCV,GAAuB,SAACoD,EAAD,YAAM9C,WAHY,gBAIzCK,GAAkB,SAACyC,EAAD,YAAM9C,WAJiB,KAQjCyG,GAAWmD,YAAc,IAAD,sBAClCxG,EAAW0G,WAAY,SAACjE,EAAD,OAAU7F,EAAV,EAAUA,QAAV,6BAA4B6F,GAA5B,CAAmC7F,OADxB,gBAElCsD,EAAcwG,WAAY,SAACjE,EAAOkE,GACjC,IAAMhF,EAAUgF,EAAOC,KAAKC,IAC5B,OAAOpE,EAAME,QAAO,qBAAGnD,KAAgBmC,EAAQnC,SAJd,gBAMlCM,EAAY4G,WAAY,SAACjE,EAAD,OAAU7F,EAAV,EAAUA,QAAV,OAAyB6F,EAAMM,SAAWnG,EAAQmG,OAASN,EAAQ7F,KANzD,KASxBkK,GAAYN,aAAc,GAAD,sBACnC1G,EAAYiH,SAAU,kBAAM,KADO,gBAEnCjH,EAAY4G,WAAY,kBAAM,KAFK,gBAGnC5G,EAAYkH,UAAW,kBAAM,KAHM,gBAKnChH,EAAW+G,SAAU,kBAAM,KALQ,gBAMnC/G,EAAW0G,WAAY,kBAAM,KANM,gBAOnC1G,EAAWgH,UAAW,kBAAM,KAPO,gBASnC9G,EAAc6G,SAAU,kBAAM,KATK,gBAUnC7G,EAAcwG,WAAY,kBAAM,KAVG,gBAWnCxG,EAAc8G,UAAW,kBAAM,KAXI,KAczBlI,GAAQ0H,YAAc,MAAD,sBAE/B1G,EAAYkH,UAAW,SAACtH,EAAD,YAAMZ,SAFE,gBAG/BgB,EAAYiH,SAAU,kBAAM,QAHG,gBAK/B/G,EAAWgH,UAAW,SAACtH,EAAD,YAAMZ,SALG,gBAM/BkB,EAAW+G,SAAU,kBAAM,QANI,gBAQ/B7G,EAAc8G,UAAW,SAACtH,EAAD,YAAMZ,SARA,gBAS/BoB,EAAc6G,SAAU,kBAAM,QATC,KClC5BE,GAAU,uBACXC,YAAqB,KADV,CAMdC,OAGIC,GAAcC,aAAgB,CAClCpG,SAAUoG,aAAgB,CAAEP,aAAWzD,YAAUvE,WACjD6D,OAAQ4D,GACRtG,WAAYwG,KAGDa,GAAQC,YAAe,CAClCC,QAASJ,GACTH,cACAQ,UAAUC,ICbZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,KAAD,UAEE,cAAC,GAAD,UAKNQ,SAASC,eAAe,SAG1BhC,O","file":"static/js/main.805f8a47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_nav\":\"Navigation__nav__3aHRI\",\"_link\":\"Navigation__link__2zNLE\",\"_activeLink\":\"Navigation__activeLink__JWFev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNumber\":\"ContactsForm_inputNumber__3m95S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"Section_form_section__3xxdJ\",\"contacts_section\":\"Section_contacts_section__37zqk\"};","import { createAction } from '@reduxjs/toolkit';\r\nlet nameRef;\r\nlet numberRef;\r\n\r\nexport const addNewContactToState = createAction('newContact/create', e => {\r\n  e.preventDefault();\r\n  nameRef = e.target.children[0].children[1];\r\n  numberRef = e.target.children[1].children[1];\r\n\r\n  return {\r\n    payload: { newName: nameRef.value.trim(), newNumber: numberRef.value },\r\n  };\r\n});\r\n\r\nexport const clearNewContact = createAction('newContact/clear', () => {\r\n  if (nameRef) nameRef.value = '';\r\n  if (numberRef) numberRef.value = '';\r\n  return {\r\n    payload: { newName: '', newNumber: '' },\r\n  };\r\n});\r\n","const LoginView = () => {\r\n  return <div>Login form</div>;\r\n};\r\n\r\nexport default LoginView;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const PhonebookForm = styled.form`\r\n  display: block;\r\n  border: solid 1px black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 26px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: block;\r\n  font-size: 22px;\r\n`;\r\n","import { FormButton, FormLabel, PhonebookForm } from './ContactsForm.styled';\nimport InputMask from 'react-input-mask';\nimport { addNewContactToState } from '../../redux/actions/newContacts_actions.js';\nimport css from './ContactsForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  return (\n    <PhonebookForm onSubmit={e => dispatch(addNewContactToState(e))}>\n      <FormLabel>\n        <span>Name</span>\n        <InputMask\n          key='nameKey'\n          className={css.inputNumber}\n          type='text'\n          name='name'\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder='Arnold Schwarzenegger'\n          maxLength='25'\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <span>Number</span>\n        <InputMask\n          key='numberKey'\n          className={css.inputNumber}\n          type='tel'\n          name='number'\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n          placeholder='+38 (099) 999-99-99'\n          mask='+38 (099) 999-99-99'\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n          required\n        />\n      </FormLabel>\n      <FormButton type='submit'>Add contact</FormButton>\n    </PhonebookForm>\n  );\n}\nexport default Form;\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nfunction  Notification ({ message }) {\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const makeSearch = createAction('filter/changeFilter', value => ({ payload: value.trim().toLowerCase() }));\r\n","import axios from 'axios';\r\nimport { Notify } from 'notiflix';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4321';\r\n// add fake json\r\n// axios.defaults.baseURL = 'https://my-json-server.typicode.com/sepaev/goit-react-hw-08-phonebook/';\r\n\r\nexport async function fetchContacts() {\r\n  return await axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(error => {\r\n      if (error.message === 'Network Error') {\r\n        Notify.failure(`Sorry. Server is not working. Please check the connection`);\r\n      } else {\r\n        Notify.failure(`${error.name}. ${error.message}`);\r\n      }\r\n      throw new Error(error.message);\r\n    });\r\n}\r\n\r\nexport async function postContact({ newName, newNumber }) {\r\n  const { data } = await axios\r\n    .post('/contacts', { name: newName, number: newNumber })\r\n    .then(response => {\r\n      Notify.info(`Contact ${newName} was added successfully`);\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was added.`);\r\n      return null;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id, name) {\r\n  axios\r\n    .delete('/contacts/' + id)\r\n    .then(_ => {\r\n      Notify.success(`Contact ${name} was removed successfully`);\r\n      return true;\r\n    })\r\n    .catch(error => {\r\n      Notify.failure(`Oh, no! ${error.message} Nothing was deleted.`);\r\n      return false;\r\n    });\r\n}\r\n","import { fetchContacts, postContact, deleteContact } from '../../services/contactsAPI';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = createAsyncThunk('contacts/fetchContacts', async () => await fetchContacts());\r\nexport const addContact = createAsyncThunk('contacts/createContact', async newContact => await postContact(newContact));\r\nexport const removeContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async ({ id, name }) => await deleteContact(id, name),\r\n);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  height: 26px;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","function doClearName(name) {\r\n  if (!name) return name;\r\n  return name.split(' ').join('').toLowerCase().trim();\r\n}\r\nexport default doClearName;\r\n","import doClearName from './doClearName';\r\n\r\nfunction checkNameExists(inputName, contacts) {\r\n  let result = false;\r\n  const clearName = doClearName(inputName);\r\n  if (clearName === '') result = true;\r\n  contacts.forEach(({ name }) => {\r\n    if (clearName === doClearName(name)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNameExists;\r\n","function doClearNumber(number) {\r\n  if (!number) return number;\r\n  const noSpace = number.split(' ').join('');\r\n  const noBracket = noSpace.split('(').join('').split(')').join('');\r\n  const noSign = noBracket.split('-').join('').split('+').join('');\r\n  return noSign;\r\n}\r\nexport default doClearNumber;\r\n","import doClearNumber from './doClearNumber';\r\n\r\nfunction checkNumberExists(inputNumber, contacts) {\r\n  const clearNumber = doClearNumber(inputNumber);\r\n  let result = false;\r\n  if (inputNumber === '') result = true;\r\n  contacts.forEach(({ number }) => {\r\n    if (clearNumber === doClearNumber(number)) result = true;\r\n  });\r\n  return result;\r\n}\r\nexport default checkNumberExists;\r\n","function clearDoubleIDs(contacts) {\r\n  const idList = [];\r\n  const filtredList = [];\r\n  contacts.forEach(contact => {\r\n    if (idList.indexOf(contact.id) < 0) {\r\n      idList.push(contact.id);\r\n      filtredList.push(contact);\r\n    }\r\n  });\r\n  return filtredList;\r\n}\r\nexport default clearDoubleIDs;\r\n","function parseFilterQuery(filterQuery) {\r\n  let filterQueryText = '';\r\n  let filterQueryNumber = '';\r\n  if (filterQuery) {\r\n    if (filterQuery.match(/\\d+/)) {\r\n      console.log('filterQuery -- ', filterQuery);\r\n      filterQueryNumber = filterQuery.match(/\\d+/).toString();\r\n      const queries = filterQuery.split(filterQueryNumber);\r\n      const query = queries[0] || queries[1];\r\n      filterQueryText = query ? query : '';\r\n    } else {\r\n      filterQueryText = filterQuery;\r\n    }\r\n  }\r\n  return { filterQueryText, filterQueryNumber };\r\n}\r\nexport default parseFilterQuery;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { getEntitiesSelector, getFilterSelector } from '../selectors';\r\nimport { doClearNumber, parseFilterQuery } from '../functions';\r\n\r\nconst doFiltration = state => {\r\n  const contacts = getEntitiesSelector(state);\r\n  const filter = getFilterSelector(state);\r\n\r\n  const makeFiltration = createSelector(\r\n    [() => getEntitiesSelector(state), () => getFilterSelector(state)],\r\n    (contacts, filter) => {\r\n      console.log(contacts);\r\n      const { filterQueryText, filterQueryNumber } = parseFilterQuery(filter.toString());\r\n      if (filterQueryText.length > 0 || filterQueryNumber.length > 0) {\r\n        let filtredArray = [];\r\n        //поиск по номеру\r\n        if (filterQueryNumber.length > 0) {\r\n          filtredArray = contacts.filter(({ number }) => {\r\n            const clearNumberText = doClearNumber(number);\r\n            return clearNumberText.includes(filterQueryNumber);\r\n          });\r\n          //комбинированый поиск\r\n          if (filterQueryText.length > 0) {\r\n            const namesArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n            return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\r\n          }\r\n          return filtredArray;\r\n        } else {\r\n          //Поиск по имени\r\n          filtredArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n          return filtredArray;\r\n        }\r\n      }\r\n      return contacts;\r\n    },\r\n  );\r\n  return makeFiltration(contacts, filter);\r\n};\r\nexport default doFiltration;\r\n","import doFiltration from './operations/filterOperations';\r\nimport clearDoubleIDs from './functions/clearDoubleIDs';\r\nexport const getContactsSelector = state => state.contacts;\r\nexport const getEntitiesSelector = state => getContactsSelector(state).entities;\r\nexport const getErrorSelector = state => getContactsSelector(state).error;\r\nexport const getFilterSelector = state => state.filter;\r\nexport const getNewContactSelector = state => state.newContact;\r\nexport const getAllStateSelector = state => state;\r\n\r\nexport const getFiltredContactsSelector = state => {\r\n  const contacts = getEntitiesSelector(state);\r\n  const filter = getFilterSelector(state);\r\n\r\n  if (!contacts || !contacts.length) return [];\r\n  if (!filter) return contacts;\r\n  const filtredArray = doFiltration(state);\r\n  const clearArray = clearDoubleIDs(filtredArray);\r\n  return clearArray;\r\n};\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeSearch } from '../../redux/actions/filter_actions';\r\nimport { removeContact } from '../../redux/operations/contactsOperations';\r\nimport { ContactsItem, ContactsList, DeleteButton, NumberSpan, SearchInput } from './Contacts.styled';\r\nimport { getFiltredContactsSelector, getContactsSelector, getErrorSelector } from '../../redux/selectors';\r\n\r\nfunction Contacts() {\r\n  const { entities } = useSelector(getContactsSelector);\r\n  const filterdContacts = useSelector(getFiltredContactsSelector);\r\n  const stateError = useSelector(getErrorSelector);\r\n\r\n  const message = entities.length\r\n    ? 'No contacts found.'\r\n    : stateError\r\n    ? stateError.message + '. Contacts could not be loaded to be displayed on the screen.'\r\n    : 'You have no contacts yet.';\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={e => dispatch(makeSearch(e.target.value))}\r\n        />\r\n        {filterdContacts.length > 0 &&\r\n          filterdContacts.map(({ id, name, number }) => (\r\n            <ContactsItem key={id}>\r\n              {'☎ ' + name + ': '}\r\n              <NumberSpan>\r\n                {number}\r\n                <DeleteButton id={id} onClick={() => dispatch(removeContact({ id, name }))}>\r\n                  X\r\n                </DeleteButton>\r\n              </NumberSpan>\r\n            </ContactsItem>\r\n          ))}\r\n      </ContactsList>\r\n      {!filterdContacts.length && <Notification message={message} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyle = styled.section`\n  text-align: left;\n  max-width: 500px;\n  width: 100%;\n  margin: auto;\n  border: solid 1px black;\n  background-color: white;\n  filter: drop-shadow(2px 4px 6px black);\n  padding: 25px;\n  border-radius: 10px;\n  margin: 50px auto;\n`;\n\nexport const TitleH1 = styled.h1`\n  font-size: 28px;\n  margin: 0 0 20px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport Form from '../ContactsForm';\nimport Contacts from '../Contacts';\nimport { TitleH1, SectionStyle } from './Section.styled';\nimport { Notify } from 'notiflix';\nimport css from './Section.module.css';\n\nNotify.init({ position: 'center-top' });\n\nfunction Section({ title, component }) {\n  const sectionClassName = component === 'Form' ? css.form_section : css.contacts_section;\n  <TitleH1>{title}</TitleH1>;\n  return (\n    <SectionStyle className={sectionClassName}>\n      <TitleH1>{title}</TitleH1>\n      {component === 'Form' && <Form />}\n      {component === 'Contacts' && <Contacts />}\n    </SectionStyle>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n};\n","import { Notify } from 'notiflix';\r\nimport { checkNumberExists, checkNameExists } from '../functions';\r\n///////////////////////\r\nconst checkNewContactInState = (newContact, contacts) => {\r\n  const check = checkNewContact(newContact, contacts);\r\n  if (!check.result) {\r\n    if (check.message) Notify.failure(check.message);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n////////////////////////\r\nfunction checkNewContact({ newName, newNumber }, contacts) {\r\n  let message = '';\r\n  if (!newName || !newNumber || !contacts) return { result: false, message };\r\n  if (checkNumberExists(newNumber, contacts)) {\r\n    message = `Can't do this operation. Number ${newNumber} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  if (checkNameExists(newName, contacts)) {\r\n    message = `Can't do this operation. Name ${newName} already exists.`;\r\n    return { result: false, message };\r\n  }\r\n  message = 'Well Done! Added ' + newName;\r\n  return { result: true, message };\r\n}\r\n\r\nexport default checkNewContactInState;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport Section from '../components/Section';\r\nimport { Notify } from 'notiflix';\r\nimport { clearNewContact } from '../redux/actions/newContacts_actions';\r\nimport checkNewContactInState from '../redux/operations/newContactOperations';\r\nimport { useEffect } from 'react';\r\nimport { getContacts, addContact } from '../redux/operations/contactsOperations';\r\nimport { getNewContactSelector, getEntitiesSelector } from '../redux/selectors';\r\n\r\nNotify.init({ position: 'center-top' });\r\n\r\nfunction App() {\r\n  const newContact = useSelector(getNewContactSelector);\r\n  const contacts = useSelector(getEntitiesSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (newContact.newName && checkNewContactInState(newContact, contacts)) {\r\n      dispatch(addContact(newContact));\r\n      dispatch(clearNewContact());\r\n    }\r\n  }, [contacts, dispatch, newContact]);\r\n\r\n  return (\r\n    <>\r\n      <Section title='Phonebook' component='Form' />\r\n      <hr />\r\n      <Section title='Contacts' component='Contacts' />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const LoginView = () => {\r\n  return <div>Register form</div>;\r\n};\r\n\r\nexport default LoginView;\r\n","function NotFoundView() {\r\n  return <h1>404 No such page :(</h1>;\r\n}\r\n\r\nexport default NotFoundView;\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink exact to={'/'} className={css._link} activeClassName={css._activeLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/register', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/login', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Route, Switch } from 'react-router-dom';\nimport { LoginView, RegisterView, ContactsView, NotFoundView } from './views';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Navigation />\n      </header>\n      <Switch>\n        <Route path='/' exact>\n          <ContactsView />\n        </Route>\n        <Route path='/login'>\n          <LoginView />\n        </Route>\n        <Route path='/register'>\n          <RegisterView />\n        </Route>\n        <Route path='/'>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { makeSearch } from './actions/filter_actions';\r\nimport { addNewContactToState, clearNewContact } from './actions/newContacts_actions';\r\nimport { getContacts, addContact, removeContact } from './operations/contactsOperations';\r\n\r\nexport const filterReducer = createReducer('', { [makeSearch.type]: (_, { payload }) => payload });\r\n\r\nexport const newContactReducer = createReducer(\r\n  { newName: '', newNumber: '' },\r\n  {\r\n    [addNewContactToState]: (_, { payload }) => payload,\r\n    [clearNewContact]: (_, { payload }) => payload,\r\n  },\r\n);\r\n\r\nexport const entities = createReducer([], {\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [removeContact.fulfilled]: (state, action) => {\r\n    const contact = action.meta.arg;\r\n    return state.filter(({ id }) => id !== contact.id);\r\n  },\r\n  [getContacts.fulfilled]: (state, { payload }) => (state.length === payload.length ? state : payload),\r\n});\r\n\r\nexport const isLoading = createReducer(false, {\r\n  [getContacts.pending]: () => true,\r\n  [getContacts.fulfilled]: () => false,\r\n  [getContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [removeContact.pending]: () => true,\r\n  [removeContact.fulfilled]: () => false,\r\n  [removeContact.rejected]: () => false,\r\n});\r\n\r\nexport const error = createReducer(null, {\r\n  //get\r\n  [getContacts.rejected]: (_, { error }) => error,\r\n  [getContacts.pending]: () => null,\r\n  //post\r\n  [addContact.rejected]: (_, { error }) => error,\r\n  [addContact.pending]: () => null,\r\n  //delete\r\n  [removeContact.rejected]: (_, { error }) => error,\r\n  [removeContact.pending]: () => null,\r\n});\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { filterReducer, newContactReducer, isLoading, entities, error } from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    // serializableCheck: {\r\n    //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    // },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: combineReducers({ isLoading, entities, error }),\r\n  filter: filterReducer,\r\n  newContact: newContactReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// import { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// export const persistor = persistStore(store);\r\n// const persistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter', 'newContact'],\r\n// };\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// reducer: persistedReducer,\r\n// const defaultExportObject = { store, persistor };\r\n// export default defaultExportObject;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}